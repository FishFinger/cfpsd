From - Thu Dec 10 14:33:21 2009
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
Delivered-To: jpprost@gmail.com
Received: by 10.102.247.5 with SMTP id u5cs23877muh;
        Wed, 24 Sep 2008 02:34:59 -0700 (PDT)
Received: by 10.114.192.3 with SMTP id p3mr7741514waf.189.1222248897360;
        Wed, 24 Sep 2008 02:34:57 -0700 (PDT)
Return-Path: <mpawel@ics.mq.edu.au>
Received: from vacuum1.ics.mq.edu.au (vacuum1.ics.mq.edu.au [137.111.216.103])
        by mx.google.com with ESMTP id z15si3108894pod.2.2008.09.24.02.34.55;
        Wed, 24 Sep 2008 02:34:57 -0700 (PDT)
Received-SPF: fail (google.com: domain of mpawel@ics.mq.edu.au does not designate 137.111.216.103 as permitted sender) client-ip=137.111.216.103;
Authentication-Results: mx.google.com; spf=hardfail (google.com: domain of mpawel@ics.mq.edu.au does not designate 137.111.216.103 as permitted sender) smtp.mail=mpawel@ics.mq.edu.au
Received: from verus.ics.mq.edu.au (verus.ics.mq.edu.au [137.111.216.13])
	by vacuum1.ics.mq.edu.au (8.13.8+Sun/8.13.8) with ESMTP id m8O9Yr1l009221;
	Wed, 24 Sep 2008 19:34:53 +1000 (EST)
Received: from [10.0.0.18] (aty26.neoplus.adsl.tpnet.pl [83.27.6.26])
	(authenticated bits=0)
	by verus.ics.mq.edu.au (8.14.1/8.14.1) with ESMTP id m8O9Yjnc027785
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NO);
	Wed, 24 Sep 2008 19:34:48 +1000 (EST)
Cc: "Jean-Philippe Prost" <jpprost@gmail.com>,
        "Simon Zwarts" <szwarts@ics.mq.edu.au>,
        "Brett Powley" <bpowley@ics.mq.edu.au>,
        "Mary Gardiner" <gardiner@ics.mq.edu.au>,
        "Andrew Lampert" <alampert@ics.mq.edu.au>,
        "Elena Akhmatova" <elena@ics.mq.edu.au>,
        "Luiz Augusto Sangoi Pizzato" <pizzato@ics.mq.edu.au>,
        "Mark Dras" <madras@ics.mq.edu.au>,
        "Stephen Wan" <Stephen.Wan@csiro.au>
Message-Id: <3EC74B73-46CF-4E01-A3E1-B4F02AE7FBCA@ics.mq.edu.au>
From: Pawel Mazur <mpawel@ics.mq.edu.au>
To: Henriette Viethen <jviethen@ics.mq.edu.au>
In-Reply-To: <39c53b9d0809162246k3df67fdneb07f9ce53561e72@mail.gmail.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v926)
Subject: Re: No politics, I swear :-)
Date: Wed, 24 Sep 2008 19:34:44 +1000
References: <b5e0c390809161413gd4f948dhb38a738e3b4499ae@mail.gmail.com> <200809171445.37228.szwarts@ics.mq.edu.au> <b5e0c390809162155u4ff24666j643681e6f4fe7cce@mail.gmail.com> <200809171503.52815.szwarts@ics.mq.edu.au> <b5e0c390809162222v2d498401w100302ae9360ee84@mail.gmail.com> <39c53b9d0809162231p523cc8f0nc14715dbc71cab7d@mail.gmail.com> <b5e0c390809162244x49ebe08fn99e8ef86b402867@mail.gmail.com> <39c53b9d0809162246k3df67fdneb07f9ce53561e72@mail.gmail.com>
X-Mailer: Apple Mail (2.926)

CL problems are a bit different compared to other disciplines: you can  
easily present an algorithm (in pseudo code for example) that does  
some super great cryptographic work: it can take just a few lines; in  
such cases the whole difficult part was to find the mathematical  
formulas (and their combination) and that's the achievement the paper  
is telling as about. Often the actual implementation is not much  
longer than the pseudo-code presented in the paper. Clearly it is not  
the case with CL: here the results are much dependent on the data, its  
preprocessing and many many other details. Describing all these  
details is impossible in a single paper. But as I wrote in my other  
email, I do not agree the answer to this is to publish the source  
code... (how easy it is to read through lots of sb's source code?)

An example from times when I was doing my masters: there was a paper  
that described the best algorithm in the world (btw, from Melbourne)  
for counting self-avoiding walks in certain types of graphs. The idea  
how the algorithm works could be understood from the paper, which also  
presented exact analysis of its computational complexity. But it was  
10000000000000 miles away from re-implementing the method. And the  
research problem was mathematical, very well defined, no vague areas.

Pawel




On 17/09/2008, at 3:46 PM, Henriette Viethen wrote:

> OK, sounds all a lot like politics to me now...
>
>
> On Wed, Sep 17, 2008 at 3:44 PM, Jean-Philippe Prost <jpprost@gmail.com 
> > wrote:
>> I'm not mixing up anything: I'm saying that in the same way as you're
>> expected, when writing a paper, to justify and prove every single  
>> bit you're
>> asserting unless you call it "hypothesis", "heuristic" or "oracle",  
>> the same
>> should apply to the results for which you should "open the source",  
>> as we've
>> been talking about. The conversation is indeed also relevant to the  
>> cleaning
>> bits and other scripts, but the question of "opening the source" is  
>> still
>> open -- so to speak. The problem,as I understand it, goes beyond --  
>> even
>> though it includes it -- the cleaning bits.
>>
>> On Wed, Sep 17, 2008 at 6:31 AM, Henriette Viethen <jviethen@ics.mq.edu.au 
>> >
>> wrote:
>>>
>>>> ...math people often provide
>>>> algorithms as proof of their results: "it is true since here's  
>>>> the way
>>>> to
>>>> get there".
>>>> A program IS a mathematical model, whether you can (and have the  
>>>> time
>>>> to)
>>>> present it or not. So where do you draw the line between what  
>>>> ought to
>>>> go
>>>> public and what ought not to?
>>>
>>> I think you're mixing up the concept of an algorithm with source  
>>> code
>>> here.
>>> That the source of the whole problem: having the algorithm described
>>> in your 8-page paper doesn't mean that the results you report are
>>> easily reproducible without all the data cleaning and conversion
>>> scripts or the exact implementation of the algorithm you used.
>>>
>>> j
>>>
