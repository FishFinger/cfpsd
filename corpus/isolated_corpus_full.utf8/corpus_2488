From - Thu Dec 10 14:29:25 2009
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
Delivered-To: jpprost@gmail.com
Received: by 10.114.60.10 with SMTP id i10cs328915waa;
        Mon, 21 Jan 2008 01:33:29 -0800 (PST)
Received: by 10.67.116.15 with SMTP id t15mr4567358ugm.21.1200908003484;
        Mon, 21 Jan 2008 01:33:23 -0800 (PST)
Return-Path: <corpora-bounces@uib.no>
Received: from noralf.uib.no (noralf.uib.no [129.177.30.12])
        by mx.google.com with ESMTP id j27si6676523ugc.65.2008.01.21.01.32.51;
        Mon, 21 Jan 2008 01:33:23 -0800 (PST)
Received-SPF: pass (google.com: domain of corpora-bounces@uib.no designates 129.177.30.12 as permitted sender) client-ip=129.177.30.12;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of corpora-bounces@uib.no designates 129.177.30.12 as permitted sender) smtp.mail=corpora-bounces@uib.no
Received: from localhost (noralf.uib.no) [127.0.0.1] 
	by noralf.uib.no  with esmtp  (Exim 4.34)
	id 1JGsz5-0005gL-6h; Mon, 21 Jan 2008 10:30:27 +0100
Received: from rolf.uib.no [129.177.30.19] 
	by noralf.uib.no for corpora@lists.uib.no with esmtp  (Exim 4.34)
	id 1JG0qD-0000mp-IB; Sat, 19 Jan 2008 00:41:41 +0100
Received: from mx2.jrc.it [139.191.1.110] 
	by rolf.uib.no for corpora@uib.no with esmtp  (Exim 4.34)
	id 1JG0q8-0006vx-Es; Sat, 19 Jan 2008 00:41:40 +0100
Received: from irelay.jrc.it (irelay.jrc.it [139.191.254.63])
	by mx2.jrc.it (LMC5614Amx2) with ESMTP id m0IMkDFH018331
	for <corpora@uib.no>; Fri, 18 Jan 2008 23:46:13 +0100 (CET)
Received: from ipsc-dmn1.jrc.it (ipsc-dmn1-uwc.jrc.it [139.191.243.175])
	by irelay.jrc.it (LMC5614Ainternal) with ESMTP id m0IMkCe0010278
	for <corpora@uib.no>; Fri, 18 Jan 2008 23:46:12 +0100 (MET)
Received: from jrc.it ([139.191.243.200])
	by ipsc-sc-msg.jrc.it (Sun Java System Messaging Server 6.2-6.01 (built
	Apr 3 2006)) with ESMTP id <0JUV00LYS38X7Q90@ipsc-sc-msg.jrc.it> for
	corpora@uib.no; Fri, 18 Jan 2008 23:46:09 +0100 (MET)
Received: from [139.191.243.200] (Forwarded-For: 82.56.87.141)
	by ipsc-sc-msg.jrc.it (mshttpd); Fri, 18 Jan 2008 23:46:09 +0100
Date: Fri, 18 Jan 2008 23:46:09 +0100
From: Jakub.Piskorski@jrc.it
To: corpora@uib.no
Message-id: <f6d5e511103.47913a41@jrc.it>
MIME-version: 1.0
X-Mailer: Sun Java(tm) System Messenger Express 6.2-6.01 (built Apr  3 2006)
Content-language: pl
Content-disposition: inline
X-Accept-Language: pl
Priority: normal
X-Spam-Status: No, score=-100.8 required=200.0 tests=ALL_TRUSTED,AWL,
	FUZZY_VPILL,USER_IN_WHITELIST autolearn=disabled version=3.2.0
X-Spam-Checker-Version: SpamAssassin 3.2.0 (2007-05-01) on mx2.jrc.it
X-checked-clean: by exiscan on rolf
X-Scanner: ac385174a5dd8b053d3d67d2f3dbd936 http://tjinfo.uib.no/virus.html
X-UiB-SpamFlag: NO UIB: 0.3 hits, 8.0 required
X-UiB-SpamReport: spamassassin found; 0.2 From: does not include a real name
	0.1 Received: contains a forged HELO
	0.1 BODY: hvorfor herfra?
X-Mailman-Approved-At: Mon, 21 Jan 2008 10:30:21 +0100
Subject: [Corpora-List] CALL FOR PAPERS: Finite-State Methods and Natural
 Language Processing 2008
X-BeenThere: corpora@uib.no
X-Mailman-Version: 2.1.9
Precedence: list
List-Id: <corpora.uib.no>
List-Unsubscribe: <http://mailman.uib.no/listinfo/corpora>,
	<mailto:corpora-request@uib.no?subject=unsubscribe>
List-Archive: <http://www.uib.no/mailman/public/corpora>
List-Post: <mailto:corpora@uib.no>
List-Help: <mailto:corpora-request@uib.no?subject=help>
List-Subscribe: <http://mailman.uib.no/listinfo/corpora>,
	<mailto:corpora-request@uib.no?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: corpora-bounces@uib.no
Errors-To: corpora-bounces@uib.no

CgotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCkZpbml0ZS1TdGF0ZSBNZXRob2RzIGFuZCBOYXR1cmFs
IExhbmd1YWdlIFByb2Nlc3NpbmcgLSBGU01OTFAgMjAwOApTZXZlbnRoIEludGVybmF0aW9uYWwg
V29ya3Nob3AKCiAgICAgICAgICAgICAgIEYgSSBSIFMgVCAgICAgQyBBIEwgTCAgICAgRiBPIFIg
ICAgIFAgQSBQIEUgUiBTIAoKSm9pbnQtUmVzZWFyY2ggQ2VudGVyIG9mIHRoZSBFdXJvcGVhbiBD
b21taXNzaW9uLCBJc3ByYSwgSXRhbHkKMTEtMTIgU2VwdGVtYmVyIDIwMDgKaHR0cDovL2xhbmd0
ZWNoLmpyYy5pdC9GU01OTFAyMDA4Ci0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgoKVGhpcyB5ZWFy
IEZTTU5MUCBpcyBtZXJnZWQgd2l0aCB0aGUgRkFTVEFSIAooRmluaXRlIEF1dG9tYXRhIFN5c3Rl
bXMgLSBUaGVvcmV0aWNhbCBhbmQgQXBwbGllZCBSZXNlYXJjaCkgCndvcmtzaG9wIChodHRwOi8v
d3d3LmZhc3Rhci5vcmcpLgoKCkFJTSBBTkQgU0NPUEUKClRoZSBhaW0gb2YgdGhlIEZTTU5MUCAy
MDA4IGlzIHRvIGJyaW5nIHRvZ2V0aGVyIG1lbWJlcnMgb2YgdGhlCnJlc2VhcmNoIGFuZCBpbmR1
c3RyaWFsIGNvbW11bml0eSB3b3JraW5nIG9uIGZpbml0ZS1zdGF0ZQpiYXNlZCBtb2RlbHMgaW4g
bGFuZ3VhZ2UgdGVjaG5vbG9neSwgY29tcHV0YXRpb25hbCBsaW5ndWlzdGljcywKd2ViIG1pbmlu
ZywgbGluZ3Vpc3RpY3MsIGFuZCBjb2duaXRpdmUgc2NpZW5jZSBvciBvbiByZWxhdGVkIAp0aGVv
cnkgYW5kIG1ldGhvZHMgaW4gZmllbGRzIHN1Y2ggYXMgY29tcHV0ZXIgc2NpZW5jZSBhbmQgbWF0
aGVtYXRpY3MuClRoZSB3b3Jrc2hvcCB3aWxsIGJlIGEgZm9ydW0gZm9yIHJlc2VhcmNoZXJzIGFu
ZCBwcmFjdGljaW9uZXJzIHdvcmtpbmcKCiAgKiBvbiBOTFAgYXBwbGljYXRpb25zLAogICogb24g
dGhlIHRoZW9yZXRpY2FsIGFuZCBpbXBsZW1lbnRhdGlvbiBhc3BlY3RzLCBvcgogICogb24gdGhl
aXIgY29tYmluYXRpb24uCgpUaGUgc3BlY2lhbCB0aGVtZSBvZiBGU01OTFAgMjAwOCBjZW50ZXJz
IGFyb3VuZCBoaWdoIHBlcmZvcm1hbmNlCmZpbml0ZS1zdGF0ZSBkZXZpY2VzIGluIGxhcmdlLXNj
YWxlIG5hdHVyYWwgbGFuZ3VhZ2UgdGV4dCBwcm9jZXNzaW5nIHN5c3RlbXMKYW5kIGFwcGxpY2F0
aW9ucy4gV2UgaW52aXRlIGluIHBhcnRpY3VsYXIgbm92ZWwgaGlnaC1xdWFsaXR5IHBhcGVycyBy
ZWxhdGVkIAp0byB0aGUgdG9waWNzIGluY2x1ZGluZzoKICAgCiAgKiBwcmFjdGljZXMgYW5kIGV4
cGVyaWVuY2UgaW4gZGVwbG95bWVudCBvZiBmaW5pdGUtc3RhdGUgdGVjaG5pcXVlcyAKICAgICBp
biByZWFsLXdvcmxkIGFwcGxpY2F0aW9ucyBwcm9jZXNzaW5nIG1hc3NpdmUgYW1vdW50IG9mIG5h
dHVyYWwgbGFuZ3VhZ2UgZGF0YQogICogaW5kdXN0cmlhbC1zdHJlbmd0aCBmaW5pdGUtc3RhdGUg
cGF0dGVybiBlbmdpbmVzIGZvciBpbmZvcm1hdGlvbiByZXRyaWV2YWwsIAogICAgIGluZm9ybWF0
aW9uIGV4dHJhY3Rpb24gYW5kIHJlbGF0ZWQgdGV4dC1taW5pbmcgdGFza3MKICAqIHNjYWxhYmls
aXR5IGlzc3VlcyBpbiBGUy1iYXNlZCBsYXJnZS1zY2FsZSB0ZXh0IHByb2Nlc3Npbmcgc3lzdGVt
cwogICogZWZmaWNpZW50IGZpbml0ZS1zdGF0ZSBtZXRob2RzIGluIHNlYXJjaCBlbmdpbmVzCiAg
KiBpbXBsZW1lbnRhdGlvbiwgY29uc3RydWN0aW9uLCBjb21wcmVzc2lvbiBhbmQgcHJvY2Vzc2lu
ZyB0ZWNobmlxdWVzIGZvciBodWdlIGZpbml0ZS1zdGF0ZSAKICAgICBkZXZpY2VzIGFuZCBuZXR3
b3JrcwogICogbm92ZWwgYXBwbGljYXRpb24gYW5kIGVmZmljaWVuY3ktb3JpZW50ZWQgZmluaXRl
LXN0YXRlIHBhcmFkaWdtcyAoY29tcGlsYXRpb24gYW5kIHByb2Nlc3NpbmcpLAogICAgIGUuZy4s
IGZpbml0ZS1zdGF0ZSBkZXZpY2VzIHdpdGggcmljaCBsYWJlbCBhbm5vdGF0YXRpb25zLCB1bmlm
aWNhdGlvbi1iYXNlZCBmaW5pdGUtc3RhdGUgZGV2aWNlcyAKICAqIGNvbXBhcmF0aXZlIHN0dWRp
ZXMgb2YgdGltZSBhbmQgc3BhY2UgZWZmaWNpZW50IGZpbml0ZS1zdGF0ZSBtZXRob2RzICh2cy4g
b3RoZXIgdGVjaG5pcXVlcykKICAgICB1dGlsaXplZCBpbiBOTFAgYXBwbGljYXRpb25zCiAgKiBu
b3ZlbCBhcHBsbGljYXRpb24gYXJlYXMgZm9yIGZpbml0ZS1zdGF0ZSBkZXZpY2VzIGluIHRleHQg
cHJvY2Vzc2luZyAKICAgICBhbmQgaW5mb3JtYXRpb24gbWFuYWdlbWVudCBzeXN0ZW1zIAogICog
ZGVzaWduIHBhdHRlcm5zIGZvciBpbXBsZW1lbnRpbmcgZmluaXRlLXN0YXRlIGRldmljZXMgYW5k
IHRvb2xraXRzIAoKV2UgYWxzbyBpbnZpdGUgc3VibWlzc2lvbnMgdGhhdCBhcmUgcmVsYXRlZCB0
byB0aGUgdHJhZGl0aW9uYWwgRlNNTkxQIHRoZW1lcwppbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVk
IHRvOgoKMS4gTkxQIGFwcGxpY2F0aW9ucyBhbmQgbGluZ3Vpc3RpYyBhc3BlY3RzIG9mIGZpbml0
ZS1zdGF0ZSBtZXRob2RzCgpUaGUgdG9waWMgaW5jbHVkZXMgYnV0IGlzIG5vdCByZXN0cmljdGVk
IHRvOgoKICAqIHNwZWVjaCwgc2lnbiBsYW5ndWFnZSwgcGhvbm9sb2d5LCBoeXBoZW5hdGlvbiwg
cHJvc29keSwKICAqIHNjcmlwdHMsIHRleHQgbm9ybWFsaXphdGlvbiwgc2VnbWVudGF0aW9uLCB0
b2tlbml6YXRpb24sIGluZGV4aW5nLAogICogbW9ycGhvbG9neSwgc3RlbW1pbmcsIGxlbW1hdGlz
YXRpb24sIGluZm9ybWF0aW9uIHJldHJpZXZhbCwgd2ViIG1pbmluZywgc3BlbGxpbmcgY29ycmVj
dGlvbiwgCiAgKiBzeW50YXgsIFBPUyB0YWdnaW5nLCBwYXJ0aWFsIHBhcnNpbmcsIGRpc2FtYmln
dWF0aW9uLCBpbmZvcm1hdGlvbiBleHRyYWN0aW9uLCBxdWVzdGlvbiBhbnN3ZXJpbmcgCiAgKiBt
YWNoaW5lIHRyYW5zbGF0aW9uLCB0cmFuc2xhdGlvbiBtZW1vcmllcywgZ2xvc3NpbmcsIGRpYWxl
Y3QgYWRhcHRhdGlvbiwKICAqIGFubm90YXRlZCBjb3Jwb3JhIGFuZCB0cmVlYmFua3MsIHNlbWkt
YXV0b21hdGljIGFubm90YXRpb24sIGVycm9yIG1pbmluZywgc2VhcmNoaW5nIAoKMi4gRmluaXRl
LXN0YXRlIG1vZGVscyBvZiBsYW5ndWFnZQoKV2l0aCB0aGlzIG1vcmUgZm9jdXNlZCB0b3BpYyAo
aW5zaWRlIDEpIHdlIGludml0ZSBwYXBlcnMgb24gYXNwZWN0cwp0aGF0IG1vdGl2YXRlIHN1ZmZp
Y2llbmN5IG9mIGZpbml0ZS1zdGF0ZSBtZXRob2RzIG9yIHRoZWlyIHN1YnNldHMgZm9yCmNhcHR1
cmluZyB2YXJpb3VzIHJlcXVpcmVtZW50cyBvZiBuYXR1cmFsIGxhbmd1YWdlIHByb2Nlc3Npbmcu
IFRoZQp0b3BpYyBpbmNsdWRlcyBidXQgaXMgbm90IHJlc3RyaWN0ZWQgdG86IAoKICAqIHBlcmZv
cm1hbmNlLCBsaW5ndWlzdGljIGFwcGxpY2FiaWxpdHksIGZpbml0ZS1zdGF0ZSBoeXBvdGhlc2Vz
CiAgKiBaaXBmJ3MgbGF3IGFuZCBjb3ZlcmFnZSwgbW9kZWwgY2hlY2tpbmcgYWdhaW5zdCBmaW5p
dGUgY29ycG9yYQogICogcmVndWxhciBhcHByb3hpbWF0aW9ucyB1bmRlciBwYXJhbWV0ZXJpemVk
IGNvbXBsZXhpdHksIGxpbWl0YXRpb25zIGFuZCBkZWZpbml0aW9ucyBvZiByZWxldmFudCAKICAg
ICBjb21wbGV4aXRpZXMgc3VjaCBhcyBhbWJpZ3VpdHksIHJlY3Vyc2lvbiwgY3Jvc3NpbmdzLCBy
dWxlIGFwcGxpY2F0aW9ucywgY29uc3RyYWludCB2aW9sYXRpb25zLAogICAgIHJlZHVwbGljYXRp
b24sIGV4cG9uZW50cywgZGlzY29udGludWl0eSwgcGF0aC13aWR0aCwgYW5kIGluZHVjdGlvbiBk
ZXB0aAogICogc2ltaWxhcml0eSBpbmZlcmVuY2VzLCBkaXNzaW1pbGF0aW9uLCBzZWdtZW50YWwg
bGVuZ3RoLCBjb3VudGVyLWZyZWVuZXNzLCBhc3luY2hyb25vdXMgbWFjaGluZXMgCiAgKiBnYXJk
ZW4tcGF0aCBzZW50ZW5jZXMsIGRldGVybWluaXN0aWMgcGFyc2luZywgZXhwZWN0ZWQgcGFyc2Vz
LCBNYXJrb3YgY2hhaW5zCiAgKiBpbmNyZW1lbnRhbCBwYXJzaW5nLCB1bmNlcnRhaW50eSwgcmVs
aWFiaWxpdHkvdmFyaWFuY2UgaW4gc3RvY2hhc3RpYyBwYXJzaW5nLCAKICAgICBsaW5lYXIgc2Vx
dWVudGlhbCBtYWNoaW5lcwoKMy4gUHJhY3RpY2VzIGZvciBidWlsZGluZyBsZXhpY2FsIHRyYW5z
ZHVjZXJzIGZvciB0aGUgd29ybGQncyBsYW5ndWFnZXMuCgpUaGUgdG9waWMgYWNjb3VudHMgZm9y
IHVzYWJpbGl0eSBvZiBmaW5pdGUtc3RhdGUgbWV0aG9kcyBpbiBOTFAuIEl0CmluY2x1ZGVzIGJ1
dCBpcyBub3QgcmVzdHJpY3RlZCB0bzoKCiAgKiByZXF1aXJlZCB1c2VyIHRyYWluaW5nIGFuZCBj
b25zdWx0YXRpb24sIGxlYXJuaW5nIGN1cnZlIG9mIG5vbi1zcGVjaWFsaXN0cwogICogcXVlc3Rp
b25uYWlyZXMsIGRpc2NvdmVyeSBtZXRob2RzLCBhZGFwdGl2ZSBjb21wdXRlci1haWRlZCBnbG9z
c2luZyBhbmQgaW50ZXJsaW5lYXJpemF0aW9uCiAgKiBleGFtcGxlLWJhc2VkIGdyYW1tYXJzLCB1
bnN1cGVydmlzZWQgbGVhcm5pbmcsIHNlbWktYXV0b21hdGljIGxlYXJuaW5nLCB1c2VyLWRyaXZl
biBsZWFybmluZyAKICAgICAoc2VlIHRvcGljIDUgdG9vKQogICogbG93IGxpdGVyYWN5IGxldmVs
IGFuZCByZXN0cmljdGVkIGF2YWlsYWJpbGl0eSBvZiB0cmFpbmluZyBkYXRhLCB3cml0aW5nIHN5
c3RlbXMvcGhvbm9sb2d5IAogICAgIHVuZGVyIGRldmVsb3BtZW50LCBuZXcgbm9uLVJvbWFuIHNj
cmlwdHMsIGVuZGFuZ2VyZWQgbGFuZ3VhZ2VzCiAgKiBsaW5ndWlzdCdzIHdvcmtiZW5jaGVzLCBz
dGVhbHRoLXRvLXdlYWx0aCBwYXJzZXIgZGV2ZWxvcG1lbnQgCiAgKiBleHBlcmllbmNlcyBvZiB1
c2luZyBleGlzdGluZyB0b29scyAoZS5nLiBUV09MKSBmb3IgY29tcHV0YXRpb25hbCBtb3JwaG9s
b2d5IGFuZCBwaG9ub2xvZ3kKCjQuIFNwZWNpZmljYXRpb24gYW5kIGltcGxlbWVudGF0aW9uIG9m
IHNldHMsIHJlbGF0aW9ucyBhbmQKbXVsdGlwbGljaXRpZXMgaW4gTkxQIHVzaW5nIGZpbml0ZSBz
dGF0ZSBkZXZpY2VzCgpUaGUgdG9waWMgaW5jbHVkZXMgYnV0IGlzIG5vdCByZXN0cmljdGVkIHRv
OgoKICAqIHJlZ3VsYXIgcnVsZSBmb3JtYWxpc21zLCBncmFtbWFyIHN5c3RlbXMsIGV4cHJlc3Np
b25zLCBvcGVyYXRpb25zLCBjbG9zdXJlIHByb3BlcnRpZXMsCiAgICAgY29tcGxleGl0aWVzCiAg
KiBhbGdvcml0aG1zIGZvciBjb21waWxhdGlvbiwgYXBwcm94aW1hdGlvbiwgbWFuaXB1bGF0aW9u
LCBvcHRpbWl6YXRpb24sIAogICAgIGFuZCBsYXp5IGV2YWx1YXRpb24gb2YgZmluaXRlIG1hY2hp
bmVzIAogICogZmluaXRlIHN0cmluZyBhbmQgdHJlZSBhdXRvbWF0YSwgdHJhbnNkdWNlcnMsIG1v
cnBoaXNtcyBhbmQgYmltb3JwaGlzbXMKICAqIHdlaWdodHMsIHJlZ2lzdGVycywgbXVsdGlwbGUg
dGFwZXMsIGFscGhhYmV0cywgc3RhdGUgY292ZXJzIGFuZCBwYXJ0aXRpb25zLCByZXByZXNlbnRh
dGlvbnMKICAqIGxvY2FsaXR5LCBjb25zdHJhaW50IHByb3BhZ2F0aW9uLCBzdGFyLWZyZWUgbGFu
Z3VhZ2VzLCBkYXRhIHZzLiBxdWVyeSBjb21wbGV4aXR5IAogICogbG9naWNhbCBzcGVjaWZpY2F0
aW9uLCBNU08oU0xSLG1hdGNoZXMpLCBGTyhTdHIsPCksIExUTCwgZ2VuZXJhbGl6ZWQgcmVzdHJp
Y3Rpb24sIGxvY2FsIGdyYW1tYXJzCiAgKiBtdWx0aS10YXBlIGF1dG9tYXRhLCBzYW1lLWxlbmd0
aCByZWxhdGlvbnMgYW5kIHBhcnRpdGlvbi1iYXNlZCBtb3JwaG9sb2d5LCBTZW1pdGljIG1vcnBo
b2xvZ3kKICAqIGF1dG9zZWdtZW50YWwgcGhvbm9sb2d5LCBzaHVmZmxlLCB0cmFqZWN0b3JpZXMs
IHN5bmNocm9uaXphdGlvbiwgc2VnbWVudGFsIGFuY2hvcmluZywgCiAgICAgYWxpZ25tZW50IGNv
bnN0cmFpbnRzLCBzeWxsYWJsZSBzdHJ1Y3R1cmUsIHBhcnRpYWwtb3JkZXIgcmVkdWN0aW9ucwog
ICogdmFyaWV0aWVzIG9mIHJlZ3VsYXIgbGFuZ3VhZ2VzIGFuZCByZWxhdGlvbnMsIAogICAgIGRl
c2NyaXB0aXZlIGNvbXBsZXhpdHkgb2YgZmluaXRlLXN0YXRlIGJhc2VkIGdyYW1tYXJzCiAgKiBh
dXRvbWF0b24tYmFzZWQgYXBwcm9hY2hlcyB0byBkZWNsYXJhdGl2ZSBjb25zdHJhaW50IGdyYW1t
YXJzLCAKICAgICBjb25zdHJhaW50cyBpbiBvcHRpbWFsaXR5IHRoZW9yeQogICogcGFyYWxsZWwg
Y29ycHVzIGFubm90YXRpb25zLCByZWdpc3RlciBhdXRvbWF0YSwgYWN5Y2xpYyB0aW1lZCBhdXRv
bWF0YQoKNS4gTWFjaGluZSBsZWFybmluZyBvZiBmaW5pdGUtc3RhdGUgbW9kZWxzIG9mIG5hdHVy
YWwgbGFuZ3VhZ2UKClRoaXMgdG9waWMgaW5jbHVkZXMgYnV0IGlzIG5vdCByZXN0cmljdGVkIHRv
OgoKICAqIGxlYXJuaW5nIHJlZ3VsYXIgcnVsZSBzeXN0ZW1zLCBsZWFybmluZyB0b3BvbG9naWVz
IG9mIGZpbml0ZSBhdXRvbWF0YSBhbmQgdHJhbnNkdWNlcnMKICAqIHBhcmFtZXRlciBlc3RpbWF0
aW9uIGFuZCBzbW9vdGhpbmcsIGxleGljYWwgb3Blbm5lc3MKICAqIGNvbXB1dGVyLWRyaXZlbiBn
cmFtbWFyIHdyaXRpbmcsIHVzZXItZHJpdmVuIGdyYW1tYXIgbGVhcm5pbmcsIGRpc2NvdmVyeSBw
cm9jZWR1cmVzIAogICogZGF0YSBzY2FyY2l0eSwgcmVhbGlzdGljIHZhcmlhdGlvbnMgb2YgR29s
ZCdzIG1vZGVsLCBsZWFybmFiaWxpdHkgYW5kIGNvZ25pdGl2ZSBzY2llbmNlCiAgKiBpbmNvbXBs
ZXRlbHkgc3BlY2lmaWVkIGZpbml0ZS1zdGF0ZSBuZXR3b3JrcwogICogbW9kZWwtdGhlb3JldGlj
IGdyYW1tYXJzLCBncmFkaWVudCB3ZWxsL2lsbC1mb3JtZWRuZXNzCgo2LiBGaW5pdGUtc3RhdGUg
bWFuaXB1bGF0aW9uIHNvZnR3YXJlICh3aXRoIHJlbGV2YW5jZSB0byB0aGUgYWJvdmUgdGhlbWVz
KQoKVGhpcyB0b3BpYyBpbmNsdWRlcyBidXQgaXMgbm90IHJlc3RyaWN0ZWQgdG8KCiAgKiByZWd1
bGFyIGV4cHJlc3Npb24gcHJlLWNvbXBpbGVycyBzdWNoIGFzIHJlZ2V4b3B0LCB4ZnN0MmZzYSwg
c3RhbmRhcmRzIGFuZCBpbnRlcmZhY2VzIAogICAgIGZvciBmaW5pdGUtc3RhdGUgYmFzZWQgc29m
dHdhcmUgY29tcG9uZW50cywgY29udmVyc2lvbiB0b29scwogICogdG9vbHMgc3VjaCBhcyBMRVhD
LCBMZXh0b29scywgSW50ZXgsIFhGU1QsIEZTTSwgR1JNLCBXRlNDLCBGSVJFIEVuZ2luZSwgRkFE
RCwgRlNBL1VUUiwgCiAgICAgU1JJTE0sIEZJUkUgU3RhdGlvbiBhbmQgR3JhaWwKICAqIGZyZWUg
b3IgYWxtb3N0IGZyZWUgc29mdHdhcmUgc3VjaCBhcyBNSVQgRlNULCBDYXJtZWwsIFJXVEggRlNB
LCBGU0EgVXRpbGl0aWVzLCBGU008Mi4wPiwKICAgICBVbml0ZXgsIE9wZW5GSVJFLCBPcGVuRlNU
LCBWYXVjYW5zb24sIFNGU1QsIFBDS0lNTU8sIE1PTkEsIEhvcHNraXAsIEFTVEwsIFVDRlNNLCAK
ICAgICBIYUxlWCwgU01MLCBhbmQgV0ZTVCAoc2VlIGh0dHA6Ly9mb3J1bXMuY3NjLmZpL2tpdHdp
a2kvcGlsb3Qvdmlldy9LaXRXaWtpL0ZzbVJlZyBmb3IgbW9yZQogICAgIGV4YW1wbGVzKQogICog
cmVzdWx0cyBvYnRhaW5hYmxlIHdpdGggc3VjaCBleHBsb3JhdGlvbiB0b29scyBhcyBhdXRvbWF0
YSwgQXV0b2dyYXBoZSwgQW1vcmUsIGFuZCBURVNUQVMgCiAgKiB2aXN1YWxpemF0aW9uIHRvb2xz
IHN1Y2ggYXMgR3JhcGh2aXogYW5kIFZhdWNhbnNvbi1HCiAgKiBsYW5ndWFnZS1zcGVjaWZpYyBy
ZXNvdXJjZXMgYW5kIGRlc2NyaXB0aW9ucywgZnJlZWx5IGF2YWlsYWJsZSBiZW5jaG1hcmtpbmcg
cmVzb3VyY2VzCgpUaGUgZGVzY3JpcHRpb25zIG9mIHRoZSB0b3BpY3MgYWJvdmUgYXJlIG5vdCBt
ZWFudCB0byBiZSBjb21wbGV0ZSwgYW5kCnNob3VsZCBleHRlbmQgdG8gY292ZXIgYWxsIHRyYWRp
dGlvbmFsIEZTTU5MUCB0b3BpY3MuIFN1Ym1pdHRlZCBwYXBlcnMKb3IgYWJzdHJhY3RzIG1heSBm
YWxsIGluIHNldmVyYWwgY2F0ZWdvcmllcy4KCgpTVUJNSVNTSU9OCgpXZSBleHBlY3QgdGhyZWUg
a2luZHMgb2Ygc3VibWlzc2lvbnM6IAoKLSBmdWxsIHBhcGVycywgCi0gc2hvcnQgcGFwZXJzLCBh
bmQKLSBpbnRlcmFjdGl2ZSBzb2Z0d2FyZSBkZW1vcy4gCgpTdWJtaXNzaW9ucyBhcmUgZWxlY3Ry
b25pYyBhbmQgaW4gUERGIGZvcm1hdCB2aWEgYSB3ZWItYmFzZWQgc3VibWlzc2lvbiBzZXJ2ZXIu
IApBdXRob3JzIGFyZSBlbmNvdXJhZ2VkIHRvIHVzZSBTcHJpbmdlciBMTkNTIHN0eWxlIChQcm9j
ZWVkaW5ncyBhbmQgT3RoZXIgTXVsdGlhdXRob3IgVm9sdW1lcykKZm9yIExhVGVYIGluIHByb2R1
Y2luZyB0aGUgUERGIGRvY3VtZW50LiBNb3JlIGluZm9ybWF0aW9uIG9uIHRoaXMgc3R5bGUgY2Fu
IGJlIGZvdW5kIGF0OiAKaHR0cDovL3d3dy5zcHJpbmdlci5jb20vZWFzdC9ob21lL2NvbXB1dGVy
L2xuY3M/U0dXSUQ9NS0xNjQtNy03MjM3Ni0wClRoZSBwYWdlIGxpbWl0IGZvciBmdWxsIHBhcGVy
cyBpcyAxMiBwYWdlcywgd2hlcmVhcyBzaG9ydCBwYXBlcnMgYW5kIApzb2Z0d2FyZSBkZW1vIGRl
c2NyaXB0aW9ucyBhcmUgbGltaXRlZCB0byA2IHBhZ2VzLiBUaGUgaW5mb3JtYXRpb24gYWJvdXQg
dGhlIGF1dGhvcihzKSAKc2hvdWxkIGJlIG9taXR0ZWQgaW4gdGhlIHN1Ym1pdHRlZCBwYXBlcnMg
c2luY2UgdGhlIHJldmlldyBwcm9jZXNzIHdpbCBiZSBibGluZC4gCk1vcmUgZGV0YWlsZWQgaW5m
b3JtYXRpb24gd2lsbCBiZSBhdmFpbGFibGUgc29vbiBvbiB0aGUgd29ya3Nob3BzIApob21lcGFn
ZSBodHRwOlxcbGFuZ3RlY2guanJjLmx0XEZTTU5MUDIwMDgKCgpQVUJMSUNBVElPTgoKVGhlIHBh
cGVycyBhbmQgYWJzdHJhY3RzIHdpbGwgYmUgcHVibGlzaGVkIGluIEZTTU5MUCAyMDA4IHByb2Nl
ZWRpbmdzLiAKUHVibGljYXRpb24gb2YgcmV2aXNlZCB2ZXJzaW9ucyBvZiB0aGUgcGFwZXJzIGlu
IGEgc3BlY2lhbCBqb3VybmFsIGlzc3VlIAppcyBwbGFubmVkLgoKCklNUE9SVEFOVCBEQVRFUwoK
UGFwZXIgc3VibWlzc2lvbnMgZHVlOiAgMTEgTWF5IApOb3RpZmljYXRpb24gb2YgYWNjZXB0YW5j
ZTogIDExIEp1bmUKQ2FtZXJhLXJlYWR5IHZlcnNpb25zIGR1ZTogMzAgSnVuZSAKCgpQUk9HUkFN
IENPTU1JVFRFRSAodG8gYmUgZXh0ZW5kZWQpCgpDeXJpbCBBbGxhdXplbiAoR29vZ2xlIFJlc2Vh
cmNoLCBOZXcgWW9yaywgVVNBKSAKRnJhbmNpc2NvIENhc2FjdWJlcnRhIChJbnN0aXR1dG8gVGVj
bm9sb2dpY28gRGUgSW5mb3Jtw6F0aWNhLCBWYWxlbmNpYSwgU3BhaW4pIApNYXhpbWUgQ3JvY2hl
bW9yZSAoRGVwYXJ0bWVudCBvZiBDb21wdXRlciBTY2llbmNlLCBLaW5nJ3MgQ29sbGVnZSBMb25k
b24sIFUuSy4pIApKYW4gRGFjaXVrIChHZGHFhHNrIFVuaXZlcnNpdHkgb2YgVGVjaG5vbG9neSwg
UG9sYW5kKSAKS2FyaW4gSGFlbmVsdCAoRnJhdW5ob2ZlciBHZXNlbGxzY2hhZnQgYW5kIFVuaXZl
cnNpdHkgb2YgSGVpZGVsYmVyZywgR2VybWFueSkgClRob21hcyBIYW5uZWZvcnRoIChVbml2ZXJz
aXR5IG9mIFBvdHNkYW0sIEdlcm1hbnkpIApBbmRyw6kgS2VtcGUgKFlhaG9vIFNlYXJjaCBUZWNo
bm9sb2dpZXMsIFBhcmlzLCBGcmFuY2UpIApEZXJyaWNrIEtvdXJpZSAoRGVwdC4gb2YgQ29tcHV0
ZXIgU2NpZW5jZSwgVW5pdmVyc2l0eSBvZiBQcmV0b3JpYSwgU291dGggQWZyaWNhKSAKQW5kcmFz
IEtvcm5haSAoQnVkYXBlc3QgSW5zdGl0dXRlIG9mIFRlY2hub2xvZ3ksIEh1bmdhcnkgYW5kIE1l
dGFDYXJ0YSwgQ2FtYnJpZGdlLCBVU0EpIApIYW5zLVVscmljaCBLcmllZ2VyIChERktJIEdtYkgs
IFNhYXJicsO8Y2tlbiwgR2VybWFueSkgCkVyaWMgTGFwb3J0ZSAoVW5pdmVyc2l0w6kgZGUgTWFy
bmUtbGEtVmFsbMOpZSwgRnJhbmNlKSAKU3RveWFuIE1paG92IChCdWxnYXJpYW4gQWNhZGVteSBv
ZiBTY2llbmNlcywgU29maWEsIEJ1bGdhcmlhKSAKS2VtYWwgT2ZsYXplciAoU2FiYW5jaSBVbml2
ZXJzaXR5LCBUdXJrZXkgYW5kIENhcm5lZ2llIE1lbGxvbiBVbml2ZXJzaXR5LCBQaXR0c2J1cmdo
LCBVU0EpIApKYWt1YiBQaXNrb3Jza2kgKEpvaW50IFJlc2VhcmNoIENlbnRlciBvZiB0aGUgRXVy
b3BlYW4gQ29tbWlzc2lvbiwgSXRhbHkpIApTdHJhaGlsIFJpc3RvdiAoUnVkZXIgQm9za292aWMg
SW5zdGl0dXRlLCBaYWdyZWIsIENyb2F0aWEpIApXb2pjaWVjaCBSeXR0ZXIgKFdhcnNhdyBVbml2
ZXJzaXR5LCBQb2xhbmQpIApKYWNxdWVzIFNha2Fyb3ZpdGNoIChFY29sZSBuYXRpb25hbGUgc3Vw
w6lyaWV1cmUgZGVzIFTDqWzDqWNvbW11bmljYXRpb25zLCBQYXJpcywgRnJhbmNlKSAKTWF4IFNp
bGJlcnp0ZWluIChVbml2ZXJzaXTDqSBkZSBGcmFuY2hlLUNvbXTDqSwgRnJhbmNlKSAKV29qY2ll
Y2ggU2t1dCAoR29vZ2xlIFJlc2VhcmNoLCBNb3VudGFpbiBWaWV3LCBVU0EpIApCcnVjZSBXYXRz
b24gKERlcHQuIG9mIENvbXB1dGVyIFNjaWVuY2UsIFVuaXZlcnNpdHkgb2YgUHJldG9yaWEsIFNv
dXRoIEFmcmljYSkgClNodWx5IFdpbnRuZXIgKFVuaXZlcnNpdHkgb2YgSGFpZmEsIElzcmFlbCkg
CkF0cm8gVm91dGlsYWluZW4gKENvbm5leG9yIE95LCBGaW5sYW5kKSAKQW5zc2kgWWxpIEp5csOk
IChVbml2ZXJzaXR5IG9mIEhlbHNpbmtpIGFuZCBDU0Mg4oCTIFNjaWVudGlmaWMgQ29tcHV0aW5n
IEx0ZC4sIEVzcG9vLCBGaW5sYW5kKSAKU2hlbmcgWXUgKFVuaXZlcnNpdHkgb2YgV2VzdGVybiBP
bnRhcmlvLCBDYW5hZGEpIApMeW5ldHRlIHZhbiBaaWpsIChTdGVsbGVuYm9zY2ggVW5pdmVyc2l0
eSwgU291dGggQWZyaWNhKSAKCgpPUkdBTklaSU5HIENPTU1JVFRFRQoKRGVycmljayBLb3VyaWUg
KERlcHQuIG9mIENvbXB1dGVyIFNjaWVuY2UsIFVuaXZlcnNpdHkgb2YgUHJldG9yaWEsIFNvdXRo
IEFmcmljYSkgCkpha3ViIFBpc2tvcnNraSAoSm9pbnQgUmVzZWFyY2ggQ2VudGVyIG9mIHRoZSBF
dXJvcGVhbiBDb21taXNzaW9uLCBJdGFseSkgCkhyaXN0byBUYW5ldiAoSm9pbnQgUmVzZWFyY2gg
Q2VudGVyIG9mIHRoZSBFdXJvcGVhbiBDb21taXNzaW9uLCBJdGFseSkgCkJydWNlIFdhdHNvbiAo
RGVwdC4gb2YgQ29tcHV0ZXIgU2NpZW5jZSwgVW5pdmVyc2l0eSBvZiBQcmV0b3JpYSwgU291dGgg
QWZyaWNhKSAKCgpTVEVFUklORyBDT01NSVRURUUKCkxhdXJpIEthcnR0dW5lbiAoUGFsbyBBbHRv
IFJlc2VhcmNoIENlbnRlciwgVVNBIGFuZCBTdGFuZm9yZCBVbml2ZXJzaXR5LCBVU0EpIApLaW1t
byBLb3NrZW5uaWVtaSAoVW5pdmVyc2l0eSBvZiBIZWxzaW5raSwgRmlubGFuZCkgCktlbWFsIE9m
bGF6ZXIgKFNhYmFuY2kgVW5pdmVyc2l0eSwgVHVya2V5IGFuZCBDYXJuZWdpZSBNZWxsb24gVW5p
dmVyc2l0eSwgVVNBKSAKQW5zc2kgWWxpIEp5csOkIChVbml2ZXJzaXR5IG9mIEhlbHNpbmtpIGFu
ZCBDU0Mg4oCTIFNjaWVudGlmaWMgQ29tcHV0aW5nIEx0ZC4sIEVzcG9vKSAKCgoKX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KQ29ycG9yYSBtYWlsaW5nIGxp
c3QKQ29ycG9yYUB1aWIubm8KaHR0cDovL21haWxtYW4udWliLm5vL2xpc3RpbmZvL2NvcnBvcmEK
