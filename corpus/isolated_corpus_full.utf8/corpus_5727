From - Thu Dec 10 14:37:49 2009
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
Delivered-To: jpprost@gmail.com
Received: by 10.204.62.208 with SMTP id y16cs193229bkh;
        Sat, 25 Jul 2009 09:56:21 -0700 (PDT)
Received: by 10.204.114.9 with SMTP id c9mr1004263bkq.161.1248540973715;
        Sat, 25 Jul 2009 09:56:13 -0700 (PDT)
Return-Path: <corpora-bounces@uib.no>
Received: from half.uib.no (half.uib.no [129.177.30.20])
        by mx.google.com with ESMTP id 7si179725bwz.5.2009.07.25.09.56.07;
        Sat, 25 Jul 2009 09:56:13 -0700 (PDT)
Received-SPF: pass (google.com: domain of corpora-bounces@uib.no designates 129.177.30.20 as permitted sender) client-ip=129.177.30.20;
Authentication-Results: mx.google.com; spf=pass (google.com: domain of corpora-bounces@uib.no designates 129.177.30.20 as permitted sender) smtp.mail=corpora-bounces@uib.no
Received: from localhost (half.uib.no) [127.0.0.1] 
	by half.uib.no  with esmtp  (Exim 4.69)
	id 1MUkRq-0001eO-4x; Sat, 25 Jul 2009 18:50:14 +0200
Received: from rolf.uib.no [129.177.30.19] 
	by half.uib.no for corpora@lists.uib.no with esmtp  (Exim 4.69)
	id 1MUkRp-0001eH-D9; Sat, 25 Jul 2009 18:50:13 +0200
Received: from imap3.amu.edu.pl [150.254.65.67] 
	by rolf.uib.no for corpora@uib.no with esmtp  (Exim 4.69)
	id 1MUkRo-0003fB-IG; Sat, 25 Jul 2009 18:50:13 +0200
Received: from localhost (localhost [127.0.0.1])
	by imap3.amu.edu.pl (Postfix) with ESMTP id 01872386F73
	for <corpora@uib.no>; Sat, 25 Jul 2009 18:50:11 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at imap3.amu.edu.pl
Received: from imap3.amu.edu.pl ([127.0.0.1])
	by localhost (imap2.amu.edu.pl [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id KMn9SFTVCLNx for <corpora@uib.no>;
	Sat, 25 Jul 2009 18:50:10 +0200 (CEST)
Received: from bxm181.neoplus.adsl.tpnet.pl (bxm181.neoplus.adsl.tpnet.pl
	[83.30.6.181])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by imap3.amu.edu.pl (Postfix) with ESMTPSA id 8237A387043
	for <corpora@uib.no>; Sat, 25 Jul 2009 18:50:10 +0200 (CEST)
From: LTC <ltc@amu.edu.pl>
Organization: UAM
To: corpora@uib.no
User-Agent: KMail/1.9.9
MIME-Version: 1.0
Content-Disposition: inline
Date: Sat, 25 Jul 2009 20:52:47 +0200
Message-Id: <200907252052.47924.ltc@amu.edu.pl>
X-checked-clean: by exiscan on rolf
X-Scanner: 68254d363546bcf5061223a0060ad10d http://tjinfo.uib.no/virus.html
X-UiB-SpamFlag: NO UIB: 0.2 hits, 8.0 required
X-UiB-SpamReport: spamassassin found; 0.1 BODY: UIB_MAILWON
	0.1 BODY: hvorfor herfra?
Subject: [Corpora-List] LTC2009+FlaReNet-LRL2009 Workshop - 1 week reminder
	for LTC
X-BeenThere: corpora@uib.no
X-Mailman-Version: 2.1.12
Precedence: list
List-Id: <corpora.uib.no>
List-Unsubscribe: <http://mailman.uib.no/options/corpora>,
	<mailto:corpora-request@uib.no?subject=unsubscribe>
List-Archive: <http://www.uib.no/mailman/public/corpora>
List-Post: <mailto:corpora@uib.no>
List-Help: <mailto:corpora-request@uib.no?subject=help>
List-Subscribe: <http://mailman.uib.no/listinfo/corpora>,
	<mailto:corpora-request@uib.no?subject=subscribe>
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
Sender: corpora-bounces@uib.no
Errors-To: corpora-bounces@uib.no

RGVhciBDb2xsZWFndWVzLApJIGFtIHBsZWFzZWQgdG8gaW52aXRlIHlvdSB0byBzdWJtaXQgYSBw
YXBlciB0byB0aGUgTGFuZ3VhZ2UgYW5kIFRlY2hub2xvZ3kgCkNvbmZlcmVuY2UgMjAwOSwgUG96
bmHFhCwgUG9sYW5kLCBpbiBOb3ZlbWJlciA2LTguClBsZWFzZSBkbyBub3RpY2UgdGhhdCB0aGUg
Q29uZmVyZW5jZSBpcyBleHRlbmRlZCB0byBOb3ZlbWJlciA1IGJ5IApMZXNzLVJlc291cmNlZCBM
YW5ndWFnZXMgV29ya3Nob3AgKExSTCAyMDA5KSBjby1vcmdhbmlzZWQgYnkgRmxhUmVOZXQgYW5k
IApFbHJhL0VsZGEgKHNlZSBiZWxvdykuCgpXZSBob3BlIHRvIHNlZSB5b3UgaW4gUG96bmHFhC4K
QmVzdCByZWdhcmRzClp5Z211bnQgVmV0dWxhbmksIExUQyAyMDA5IENoYWlyCgoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioKCkNhbGwgZm9yIHBhcGVycyBhbmQgcGFydGljaXBhdGlvbgoKVGhlIDR0aCBM
QU5HVUFHRSBBTkQgVEVDSE5PTE9HWSBDT05GRVJFTkNFOiBIdW1hbiBMYW5ndWFnZSBUZWNobm9s
b2dpZXMgYXMgYSAKQ2hhbGxlbmdlCmZvciBDb21wdXRlciBTY2llbmNlIGFuZCBMaW5ndWlzdGlj
cyAoTFRDIDIwMDkpLCBhIG1lZXRpbmcgb3JnYW5pemVkIGJ5IHRoZSAKRmFjdWx0eSBvZiBNYXRo
ZW1hdGljcyBhbmQgQ29tcHV0ZXIgU2NpZW5jZSBvZiBBZGFtIE1pY2tpZXdpY3ogVW5pdmVyc2l0
eSwgClBvem5hxYQsIFBvbGFuZCBpbiBjb29wZXJhdGlvbiB3aXRoIHRoZSBBZGFtIE1pY2tpZXdp
Y3ogVW5pdmVyc2l0eSBGb3VuZGF0aW9uIAooY28tb3JnYW5pemVyKSwgd2lsbCB0YWtlIHBsYWNl
IG9uIE5vdmVtYmVyIDYtOCwgMjAwOS4KCkh1bWFuIExhbmd1YWdlIFRlY2hub2xvZ2llcyAoSExU
KSBjb250aW51ZSB0byBiZSBhIGNoYWxsZW5nZSBmb3IgY29tcHV0ZXIgCnNjaWVuY2UsIGxpbmd1
aXN0aWNzIGFuZCByZWxhdGVkIGZpZWxkcyBhcyB0aGVzZSBhcmVhcyBiZWNvbWUgYW4gZXZlciBt
b3JlIAplc3NlbnRpYWwgZWxlbWVudCBvZiBvdXIgZXZlcnlkYXkgdGVjaG5vbG9naWNhbCBlbnZp
cm9ubWVudC4gU2luY2UgdGhlIHZlcnkgCmJlZ2lubmluZyBvZiB0aGUgQ29tcHV0ZXIgYW5kIElu
Zm9ybWF0aW9uICBBZ2UgdGhlc2UgZmllbGRzIGhhdmUgaW5mbHVlbmNlZCAKYW5kIHN0aW11bGF0
ZWQgZWFjaCBvdGhlci4gVGhlIEV1cm9wZWFuIFVuaW9uIHN0cm9uZ2x5IHN1cHBvcnRzIEhMVCB1
bmRlciB0aGUgCjd0aCBGcmFtZXdvcmsgUHJvZ3JhbS4gVGhlc2UgZWZmb3J0cyBhcyB3ZWxsIGFz
IHRlY2hub2xvZ2ljYWwsIHNvY2lhbCBhbmQgCmN1bHR1cmFsIGdsb2JhbGl6YXRpb24gaGF2ZSBj
cmVhdGVkIGEgZmF2b3JhYmxlIGNsaW1hdGUgZm9yIHRoZSBpbnRlbnNpdmUgCmV4Y2hhbmdlIG9m
IG5vdmVsIGlkZWFzLCBjb25jZXB0cyBhbmQgc29sdXRpb25zIGFjcm9zcyBpbml0aWFsbHkgZGlz
dGFudCAKZGlzY2lwbGluZXMuIFdlIGFpbSBhdCBmdXJ0aGVyIGNvbnRyaWJ1dGluZyB0byB0aGlz
IGV4Y2hhbmdlIGFuZCBpbnZpdGUgeW91IAp0byBqb2luIHVzIGF0IExUQyBpbiBOb3ZlbWJlciAy
MDA5LCBhcyB3ZWxsIGFzIGF0IHRoZSBGbGFSZU5ldCB3b3Jrc2hvcCAoTFJMIAoyMDA5KSBvbiB0
aGUgdGhlbWUgIkdldHRpbmcgTGVzcy1SZXNvdXJjZWQgTGFuZ3VhZ2VzIG9uLUJvYXJkISIuCgpa
eWdtdW50IFZldHVsYW5pCkxUQyAyMDA5IENoYWlyCnZldHVsYW5pQGFtdS5lZHUucGwKCgpDT05G
RVJFTkNFIFRPUElDUwoKVGhlIGNvbmZlcmVuY2UgdG9waWNzIGluY2x1ZGUgdGhlIGZvbGxvd2lu
ZyAodGhlIG9yZGVyaW5nIGlzIG5vdCAKc2lnbmlmaWNhdGl2ZSk6CiAgIC0gZWxlY3Ryb25pYyBs
YW5ndWFnZSByZXNvdXJjZXMgYW5kIHRvb2xzLAogICAtIGZvcm1hbGlzYXRpb24gb2YgbmF0dXJh
bCBsYW5ndWFnZXMsCiAgIC0gcGFyc2luZyBhbmQgb3RoZXIgZm9ybXMgb2YgTkwgcHJvY2Vzc2lu
ZywKICAgLSBjb21wdXRlciBtb2RlbGxpbmcgb2YgbGFuZ3VhZ2UgY29tcGV0ZW5jZSwKICAgLSBO
TCB1c2VyIG1vZGVsbGluZywKICAgLSBOTCB1bmRlcnN0YW5kaW5nIGJ5IGNvbXB1dGVycywKICAg
LSBrbm93bGVkZ2UgcmVwcmVzZW50YXRpb24sCiAgIC0gbWFuLW1hY2hpbmUgTkwgaW50ZXJmYWNl
cywKICAgLSBMb2dpYyBQcm9ncmFtbWluZyBpbiBOYXR1cmFsIExhbmd1YWdlIFByb2Nlc3Npbmcs
CiAgIC0gc3BlZWNoIHByb2Nlc3NpbmcsCiAgIC0gTkwgYXBwbGljYXRpb25zIGluIHJvYm90aWNz
LAogICAtIHRleHQtYmFzZWQgaW5mb3JtYXRpb24gcmV0cmlldmFsIGFuZCBleHRyYWN0aW9uLAog
ICAtIHF1ZXN0aW9uIGFuc3dlcmluZywKICAgLSB0b29scyBhbmQgbWV0aG9kb2xvZ2llcyBmb3Ig
ZGV2ZWxvcGluZyBtdWx0aWxpbmd1YWwgc3lzdGVtcywKICAgLSB0cmFuc2xhdGlvbiBlbmhhbmNl
bWVudCB0b29scywKICAgLSBjb3Jwb3JhLWJhc2VkIG1ldGhvZHMgaW4gbGFuZ3VhZ2UgZW5naW5l
ZXJpbmcsCiAgIC0gV29yZE5ldC1saWtlIG9udG9sb2dpZXMsCiAgIC0gbWV0aG9kb2xvZ2ljYWwg
aXNzdWVzIGluIEhMVCwKICAgLSBsYW5ndWFnZS1zcGVjaWZpYyBjb21wdXRhdGlvbmFsIGNoYWxs
ZW5nZXMgZm9yIEhMVHMgKGVzcGVjaWFsbHkgZm9yIApsYW5ndWFnZXMgb3RoZXIgdGhhbiBFbmds
aXNoKSwKICAgLSBITFQgc3RhbmRhcmRzLAogICAtIEhMVHMgYXMgYSBzdXBwb3J0IGZvciBmb3Jl
aWduIGxhbmd1YWdlIHRlYWNoaW5nLAogICAtIGNvbW11bmljYXRpdmUgaW50ZWxsaWdlbmNlLAog
ICAtIGxlZ2FsIGlzc3VlcyBjb25uZWN0ZWQgd2l0aCBITFRzIChwcm9ibGVtcyBhbmQgY2hhbGxl
bmdlcyksCiAgIC0gY29udHJpYnV0aW9uIG9mIEhMVHMgdG8gdGhlIEhvbWVsYW5kIFNlY3VyaXR5
IHByb2JsZW1zICh0ZWNobm9sb2d5IAphcHBsaWNhdGlvbnMgYW5kIGxlZ2FsIGFzcGVjdHMpLAog
ICAtIHZpc2lvbmFyeSBwYXBlcnMgaW4gdGhlIGZpZWxkIG9mIEhMVCwKICAgLSBITFQncyBmb3Ig
dGhlIExlc3MtUmVzb3VyY2VkIExhbmd1YWdlcwogICAtIEhMVCByZWxhdGVkIHBvbGljaWVzLAog
ICAtIHN5c3RlbSBwcm90b3R5cGUgcHJlc2VudGF0aW9ucy4KClRoaXMgbGlzdCBpcyBieSBubyBt
ZWFucyBjbG9zZWQgYW5kIHdlIGFyZSBvcGVuIHRvIGZ1cnRoZXIgcHJvcG9zYWxzLiBQbGVhc2Ug
CmRvIG5vdCBoZXNpdGF0ZSB0byBjb250YWN0IHVzIGluIG9yZGVyIHRvIGZlZWQgdXMgd2l0aCB5
b3Ugc3VnZ2VzdGlvbnMgYW5kIAppZGVhcyBvZiBob3cgdG8gc2F0aXNmeSB5b3VyIGV4cGVjdGF0
aW9uIGNvbmNlcm5pbmcgdGhlIHByb2dyYW0uIFRoZSBQcm9ncmFtIApDb21taXR0ZWUgaXMgYWxz
byBvcGVuIHRvIHN1Z2dlc3Rpb25zIGNvbmNlcm5pbmcgYWNjb21wYW55aW5nIGV2ZW50cyAKKHdv
cmtzaG9wcywgZXhoaWJpdHMsIHBhbmVscywgZXRjKS4gU3VnZ2VzdGlvbnMsIGlkZWFzIGFuZCBv
YnNlcnZhdGlvbnMgbWF5IApiZSBhZGRyZXNzZWQgZGlyZWN0bHkgdG8gdGhlIExUQyBDaGFpciBi
eSBlbWFpbCAodmV0dWxhbmlAYW11LmVkdS5wbCkuCgoKUFJPR1JBTSBDT01NSVRURUUKClp5Z211
bnQgVmV0dWxhbmkgKEFkYW0gTWlja2lld2ljeiBVbml2ZXJzaXR5LCBQb3puYcWELCBQb2xhbmQp
IC0gY2hhaXIKClZpY3RvcmlhIEFycmFueiAoRUxSQSwgRnJhbmNlKQpBbmphIEJlbHogKFVuaXZl
cnNpdHkgb2YgQnJpZ2h0b24sIFVLKQpKYW51c3ogUy4gQmllxYQgKFdhcnNhdyBVbml2ZXJzaXR5
LCBQb2xhbmQpCkNocmlzdGlhbiBCb2l0ZXQgKElNQUcsIEZyYW5jZSkKTGVvbmFyZCBCb2xjIChJ
UEkgUEFOLCBQb2xhbmQpCkx5bm5lIEJvd2tlciAoVW5pdmVyc2l0eSBvZiBPdHRhd2EsIENhbmFk
YSkKTmljb2xldHRhIENhbHpvbGFyaSAoSUxDL0NOUiwgSXRhbHkpCk5pY2sgQ2FtcGJlbGwgKFRy
aW5pdHkgQ29sbGVnZSBEdWJsaW4sIElyZWxhbmQpCkp1bGllIENhcnNvbi1CZXJuZHNlbiAoVW5p
dmVyc2l0eSBDb2xsZWdlIER1YmxpbiwgSXJlbGFuZCkKS2hhbGlkIENob3VrcmkgKEVMUkEsIEZy
YW5jZSkKQWRhbSBExIVicm93c2tpIChQb3puYcWEIFVuaXZlcnNpdHkgb2YgVGVjaG5vbG9neSwg
UG9sYW5kKQpFbMW8YmlldGEgRHVyYSAoVW5pdmVyc2l0eSBvZiBTa292ZGUsIFN3ZWRlbikKS2F0
YXJ6eW5hIER6aXViYWxza2EtS2/FgmFjenlrIChBZGFtIE1pY2tpZXdpY3ogVW5pdmVyc2l0eSxQ
b2xhbmQpClRvbWF6IEVyamF2ZWMgKEpvc2VmIFN0ZWZhbiBJbnN0aXR1dGUsIFNsb3ZlbmlhKQpD
ZWRyaWNrIEZhaXJvbiAoVW5pdmVyc2l0eSBvZiBMb3V2YWluLCBCZWxnaXVtKQpDaHJpc3RpYW5l
IEZlbGxiYXVtIChQcmluY2V0b24gVW5pdmVyc2l0eSwgVVNBKQpNYXJpYSBHYXZyaWxpZG91IChJ
TFNQLCBHcmVlY2UpCkRhZnlkZCBHaWJib24gKFVuaXZlcnNpdHkgb2YgQmllbGVmZWxkLCBHZXJt
YW55KQpTdGVmYW4gR3JvY2hvbGV3c2tpIChQb3puYcWEIFVuaXZlcnNpdHkgb2YgVGVjaG5vbG9n
eSwgUG9sYW5kKQpGcmFueiBHdWVudGhuZXIgKEx1ZHdpZy1NYXhpbWlsaWFucy1Vbml2ZXJzaXR5
IE3DvG5jaGVuLCBHZXJtYW55KQpIYW5zIEd1ZXNnZW4gKE1hc3NleSBVbml2ZXJzaXR5LCBOZXcg
WmVhbGFuZCkKRXZhIEhhamnEjW92w6EgKENoYXJsZXMgVW5pdmVyc2l0eSwgQ3plY2ggUmVwdWJs
aWMpClJvbGFuZCBIYXVzc2VyIChFcmxhbmdlbiwgR2VybWFueSkKRXJpYyBMYXBvcnRlIChVbml2
ZXJzaXR5IE1hcm5lLWxhLVZhbGxlZSwgRnJhbmNlKQpZdmVzIExlcGFnZSAoVW5pdmVyc2l0eSBD
YWVuIEJhc3NlLU5vcm1hbmRpZSwgRnJhbmNlKQpHZXJhcmQgTGlnb3phdCAoTElNU0kvQ05SUywg
RnJhbmNlKQpOYXRhbGlhIExvdWthY2hldml0Y2ggKE1vc2NvdyBTdGF0ZSBVbml2ZXJzaXR5LCBS
dXNzaWEpCldpZXPFgmF3IEx1YmFzemV3c2tpIChBR0gvVUosIFBvbGFuZCkKQmVudGUgTWFlZ2Fh
cmQgKFVuaXZlcnNpdHkgb2YgQ29wZW5oYWdlbiwgRGVubWFyaywgRGVubWFyaykKQmVybmFyZG8g
TWFnbmluaSAoSVRDIElSU1QsIEl0YWx5KQpKb3NlcGggTWFyaWFuaSAoTElNU0ktQ05SUywgRnJh
bmNlKQpKYWNlayBNYXJ0aW5layAoUG96bmHFhCBVbml2ZXJzaXR5IG9mIFRlY2hub2xvZ3ksIFBv
bGFuZCkKR2F5cmF0IE1hdGxhdGlwb3YgKFVyZ2VuY2ggU3RhdGUgVW5pdmVyc2l0eSxVemJla2lz
dGFuKQpLZWl0aCBKLiBNaWxsZXIgKE1JVFJFLCBVU0EpCk5pY2hvbGFzIE9zdGxlciAoTGluZ3Vh
Y3VidW4gTHRkLiwgVUspCkthcmVsIFBhbGEgKE1hc2FyeWsgVW5pdmVyc2l0eSwgQ3plY2ggUmVw
dWJsaWMpClBhdmVsIFMuIFBhbmtvdiAoTmF0aW9uYWwgQWNhZGVteSBvZiBTY2llbmNlcywgS3ly
Z3l6c3RhbikKUGF0cmljayBQYXJvdWJlayAoTElNU0ktQ05SUywgRnJhbmNlKQpTdGVsaW9zIFBp
cGVyaWRpcyAoSUxTUCwgR3JlZWNlKQpFbWlsIFDFgnl3YWN6ZXdza2kgKFVuaXZlcnNpdHkgb2Yg
QmlhbHlzdG9rLCBQb2xhbmQpCkdhYm9yIFByb3N6ZWt5IChNb3JwaG9sb2dpYywgSHVuZ2FyeSkK
QWRhbSBQcnplcGnDs3Jrb3dza2kgKElQSSBQQU4sIFBvbGFuZCkKUmVpbmhhcmQgUmFwcCAoVW5p
dmVyc2l0eSBNYWlueiwgR2VybWFueSkKWmJpZ25pZXcgUmF1IChQUEJXLCBQb2xhbmQpCk1pa2Ug
Um9zbmVyIChVbml2ZXJzaXR5IG9mIE1hbHRhKQpKdXN0dXMgUm91eCAoVW5pdmVyc2l0eSBvZiBT
dGVsbGVuYm9zY2gsIFNvdXRoIEFmcmljYSkKVmFzaWxlIFJ1cyAoVW5pdmVyc2l0eSBvZiBNZW1w
aGlzLCBGZWRleCBJbnN0LiBvZiBUZWNobm9sb2d5LCBVU0EpClJhZmHFgiBSemVwa2EgKFVuaXZl
cnNpdHkgb2YgSG9ra2FpZG8sIEphcGFuKQpGcsOpZMOpcmlxdWUgU8OpZ29uZCAoWGVyb3gsIEZy
YW5jZSkKWmhvbmd6aGkgU2hpIChJbnN0aXR1dGUgb2YgQ29tcHV0aW5nIFRlY2hub2xvZ3kgLyBD
aGluZXNlIEFjYWRlbXkgb2YgU2NpZW5jZXMsIApDaGluYSkKV8WCb2R6aW1pZXJ6IFNvYmtvd2lh
ayAoQWRhbSBNaWNraWV3aWN6IFVuaXZlcnNpdHksIFBvbGFuZCkKSGFubmEgU3phZnJhxYRza2Eg
KEFkYW0gTWlja2lld3VjeiBGb3VuZGF0aW9uLCBQb2xhbmQpCk1hcmVrIMWad2lkemnFhHNraSAo
V2Fyc2F3IFVuaXZlcnNpdHksIFBvbGFuZCkKUnlzemFyZCBUYWRldXNpZXdpY3ogKEFHSCwgUG9s
YW5kKQpEYW4gVHVmacWfIChSQ0FJLCBSb21hbmlhKQpIYW5zIFVzemtvcmVpdCAoREZLSSxHZXJt
YW55KQpQaWVrIFZvc3NlbiAoVW5pdmVyc2l0eSBvZiBBbXN0ZXJkYW0sIE5ldGhlcmxhbmRzKQpU
b20gV2FjaHRlbCAoSW5kZXBlbmRlbnQgQ29uc3VsdGFudCwgSXRhbHkpCkphbiBXxJlnbGFyeiAo
UG96bmHFhCBVbml2ZXJzaXR5IG9mIFRlY2hub2xvZ3ksIFBvbGFuZCkKUmljaGFyZCBadWJlciAo
Q05SUywgRnJhbmNlKQoKCkxBTkdVQUdFCgpUaGUgY29uZmVyZW5jZSBsYW5ndWFnZSBpcyBFbmds
aXNoLgoKClBBUEVSIFNVQk1JU1NJT04KClRoZSBjb25mZXJlbmNlIGFjY2VwdHMgcGFwZXJzIGlu
IEVuZ2xpc2guIFBhcGVycyAoNSBmb3JtYXR0ZWQgcGFnZXMpIGFyZSBkdWUgCmJ5IEp1bHkgMzEs
IDIwMDkgKG1pZG5pZ2h0LCBhbnkgdGltZSB6b25lKSBhbmQgc2hvdWxkIG5vdCBpZGVudGlmeSB0
aGUgCmF1dGhvcihzKWluIGFueSBtYW5uZXIuIEluIG9yZGVyIHRvIGZhY2lsaXRhdGUgc3VibWlz
c2lvbiB3ZSBoYXZlIGRlY2lkZWQgdG8gCnJlZHVjZSB0aGUgZm9ybWF0dGluZyByZXF1aXJlbWVu
dHMgYXMgbXVjaCBhcyBwb3NzaWJsZSBhdCB0aGlzIHN0YWdlLiBQbGVhc2UsIApob3dldmVyLCBk
byBvYnNlcnZlIHRoZSBmb2xsb3dpbmc6CgoxLiBBY2NlcHRlZCBmb250cyBmb3IgdGV4dHMgYXJl
IFRpbWVzIFJvbWFuLCBUaW1lcyBOZXcgUm9tYW4uIENvdXJpZXIgaXMgCnJlY29tbWVuZGVkIGZv
ciBwcm9ncmFtIGxpc3RpbmdzLiBDaGFyYWN0ZXIgc2l6ZSBmb3IgdGhlIG1haW4gdGV4dCBzaG91
bGQgYmUgCjEwIHBvaW50cywgd2l0aCAxMSBwb2ludHMgbGVhZGluZyAobGluZSBzcGFjaW5nKS4K
CjIuIFRleHQgc2hvdWxkIGJlIHByZXNlbnRlZCBpbiAyIGNvbHVtbnMsIDgsNDIgY20gZWFjaCB3
aXRoIDAsOTUgY20gYmV0d2VlbiAKY29sdW1ucyAoZ3V0dGVyKS4KCjMuIFRoZSBwYXBlciBzaXpl
IGlzIDUgcGFnZXMgZm9ybWF0dGVkIGFjY29yZGluZyB0byAoMSkgYW5kICgyKSBhYm92ZS4KCjQu
IFRoZSB1c2Ugb2YgUERGIGZvcm1hdCBpcyBzdHJvbmdseSByZWNvbW1lbmRlZCwgYWx0aG91Z2gg
TVMgV29yZCB3aWxsIGFsc28gCmJlIGFjY2VwdGVkLgoKRGV0YWlsZWQgZ3VpZGVsaW5lcyBmb3Ig
dGhlIGZpbmFsIHN1Ym1pc3Npb24gb2YgYWNjZXB0ZWQgcGFwZXJzIHdpbGwgYmUgCnB1Ymxpc2hl
ZCBvbiB0aGUgY29uZmVyZW5jZSBXZWIgc2l0ZSBieSBTZXB0ZW1iZXIgMTAsIDIwMDkgKGFjY2Vw
dGFuY2UgCm5vdGlmaWNhdGlvbiBkYXRlKS4KCgpBbGwgc3VibWlzc2lvbnMgYXJlIHRvIGJlIG1h
ZGUgZWxlY3Ryb25pY2FsbHkgdmlhIHRoZSBMVEMgMjAwOSB3ZWIgc3VibWlzc2lvbiAKc3lzdGVt
LiBBY2NlcHRhbmNlL3JlamVjdGlvbiBub3RpZmljYXRpb24gd2lsbCBiZSBzZW50IGJ5IFNlcHRl
bWJlciAxLCAyMDA5LgoKUFVCTElDQVRJT04gUE9MSUNZCgoKQWNjZXB0YW5jZSB3aWxsIGJlIGJh
c2VkIG9uIHRoZSByZXZpZXdlcnMnIGFzc2Vzc21lbnRzIChhbm9ueW1vdXMgc3VibWlzc2lvbiAK
bW9kZWwpLiBUaGUgYWNjZXB0ZWQgcGFwZXJzIHdpbGwgYmUgcHVibGlzaGVkIGluIHRoZSBjb25m
ZXJlbmNlIHByb2NlZWRpbmdzIAooaGFyZCBjb3B5LCB3aXRoIElTQk4gbnVtYmVyKSBhbmQgb24g
Q0QtUk9NLiBUaGUgYWJzdHJhY3RzIG9mIHRoZSBhY2NlcHRlZCAKY29udHJpYnV0aW9ucyB3aWxs
IGFsc28gYmUgbWFkZSBhdmFpbGFibGUgdmlhIHRoZSBjb25mZXJlbmNlIHBhZ2UgKGR1cmluZyBp
dHMgCmxpZmV0aW1lKS4gUHVibGljYXRpb24gcmVxdWlyZXMgZnVsbCBlbGVjdHJvbmljIHJlZ2lz
dHJhdGlvbiBhbmQgcGF5bWVudCBvZiAKdGhlIGNvbmZlcmVuY2UgZmVlIChmdWxsIHJlZ2lzdHJh
dGlvbikgYnkgYXQgbGVhc3Qgb25lIG9mIHRoZSBjby1hdXRob3JzIGJ5IApPY3RvYmVyIDEsIDIw
MDkuIChJbiBjYXNlIG9mIG1vcmUgdGhhbiBvbmUgYWNjZXB0ZWQgcGFwZXIgYSBzcGVjaWFsIApy
ZWd1bGF0aW9uIHdpbGwgYmUgYXBwbGllZC4gVGhpcyByZWd1bGF0aW9uIHdpbGwgYmUgYW5ub3Vu
Y2VkIGxhdGVyIG9uLikKCkEgcG9zdC1jb25mZXJlbmNlIHZvbHVtZSB3aXRoIGV4dGVuZGVkIHZl
cnNpb25zIG9mIHNlbGVjdGVkIHBhcGVycyB3aWxsIGJlIApwdWJsaXNoZWQuIEl0IGlzIHBsYW5l
ZCB0byBwdWJsaXNoIHRoZW0gaW4gdGhlICBTcHJpbmdlciBzZXJpZXMgTGVjdHVyZSBOb3RlcyAK
aW4gQXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2UgIChmaW5hbCBhcHByb3ZhbCBwZW5kaW5nKS4KClRo
ZSBMVEMgMjAwNSBwb3N0IGNvbmZlcmVuY2Ugc2VsZWN0aW9uIGFwcGVhcmVkIGluIGZvcm0gb2Yg
U3BlY2lhbCBJc3N1ZSBvZiAKQXJjaGl2ZXMgb2YgQ29udHJvbCBTY2llbmNlcyAoMjAwNSwgVm9s
dW1lIDE1LCBuYi4gMyBhbmQgNCkKClRoZSBMVEMgMjAwNyBwb3N0LWNvbmZlcmVuY2Ugdm9sdW1l
IChleHRlbmRlZCBwYXBlcnMpIGlzIGdvaW5nIHRvIGFwcGVhciBpbiAKdGhlIFNwcmluZ2VyIFZl
cmxhZyBzZXJpZXMgTE5BSSAodm9sLiA1NjAzKS4KCgpJTVBPUlRBTlQgREFURVMvREVBRExJTkVT
CgotIERlYWRsaW5lIGZvciBzdWJtaXNzaW9uIG9mIHBhcGVycyBmb3IgcmV2aWV3OiAgSnVseSAz
MSwgMjAwOS4KLSBBY2NlcHRhbmNlL1JlamVjdGlvbiBub3RpZmljYXRpb246IFNlcHRlbWJlciAx
MCwgMjAwOS4KLSBEZWFkbGluZSBmb3Igc3VibWlzc2lvbiBvZiBmaW5hbCB2ZXJzaW9ucyBvZiBh
Y2NlcHRlZCBwYXBlcnM6IE9jdG9iZXIgMSwgCjIwMDkuCi0gQ29uZmVyZW5jZTogTm92ZW1iZXIg
Ni04LCAyMDA5LgoKUkVHSVNUUkFUSU9OCgpPbmx5IGVsZWN0cm9uaWMgcmVnaXN0cmF0aW9uIHdp
bGwgYmUgcG9zc2libGUuIERldGFpbHMgd2lsbCBiZSBwcm92aWRlZCBsYXRlciAKb24gd3d3Lmx0
Yy5hbXUuZWR1LnBsLgoKQ09ORkVSRU5DRSBGRUVTCgpOb24tc3R1ZGVudCBwYXJ0aWNpcGFudHM6
CiAgIC0gUmVndWxhciByZWdpc3RyYXRpb24gKHBheW1lbnQgYnkgT2N0b2JlciA0LCAyMDA5KSAx
NjAgRVVSTwogICAtIExhdGUgcmVnaXN0cmF0aW9uIChwYXltZW50IGFmdGVyIE9jdG9iZXIgNCwg
MjAwOSkgMTkwIEVVUk8KClN0dWRlbnQgcGFydGljaXBhbnRzOgogICAtIFJlZ3VsYXIgcmVnaXN0
cmF0aW9uIChwYXltZW50IGJlZm9yZSBPY3RvYmVyIDQsIDIwMDkpICAxMDAgRVVSTwogICAtIExh
dGUgcmVnaXN0cmF0aW9uIChwYXltZW50IGFmdGVyIE9jdG9iZXIgNCwgMjAwOSkgIDEyMCBFVVJP
CgpFeHRyYSA0MCBFdXJvIHdpbGwgYmUgY2hhcmdlZCBmb3IgdGhlIExSTCBXb3Jrc2hvcCBwYXJ0
aWNpcGF0aW9uICg1LjExLjIwMDksIApjZiBiZWxvdykuCgpTdHVkZW50IHJlZ2lzdHJhdGlvbnMg
bXVzdCBiZSBhY2NvbXBhbmllZCBieSBhIHByb29mIG9mIGZ1bGwtdGltZSBzdHVkZW50IApzdGF0
dXMgdmFsaWQgb24gdGhlIHBheW1lbnQgZGF0ZS4gUmVnaXN0cmFudHMgYXJlIHJlcXVlc3RlZCB0
byBzY2FuIGFuZCAKZS1tYWlsIHRoZWlyIHByb29mIG9mIHN0dWRlbnQgc3RhdHVzIHRvIGx0Y0Bh
bXUuZWR1LnBsLiBUaGUgZS1tYWlsIHN1YmplY3QgCmZpZWxkIG11c3QgaGF2ZSB0aGUgZm9sbG93
aW5nIGZvcm1hdDogCiAgIExUQy0wOS1TdHVkZW50U3RhdHVzLTwgTmFtZV9vZl9wYXJ0aWNpcGFu
dCA+ICAKICAgKGUuZy4gTFRDLTA5LVN0dWRlbnRTdGF0dXMtVkVUVUxBTkkpCgpUaGUgY29uZmVy
ZW5jZSBmZWUgY292ZXJzOgogICAtIFBhcnRpY2lwYXRpb24gaW4gdGhlIHNjaWVudGlmaWMgcHJv
Z3JhbW1lLgogICAtIENvbmZlcmVuY2UgbWF0ZXJpYWxzLgogICAtIFByb2NlZWRpbmdzIG9uIENE
IGFuZCBwYXBlci4KICAgLSBTb2NpYWwgZXZlbnRzIChiYW5xdWV0LC4uLikuCiAgIC0gQ29mZmVl
IGJyZWFrcy4KClBBWU1FTlQKClRoZSBwYXltZW50IG1ldGhvZHMgd2lsbCBiZSBkZXRhaWxlZCBz
aG9ydGx5LgogICAgICAgIAoKCkFXQVJEUwoKQXMgYXQgdGhlIDJuZCBhbmQgM3JkIExhbmd1YWdl
IGFuZCBUZWNobm9sb2d5IENvbmZlcmVuY2VzICgyMDA1LCAyMDA3KSBzcGVjaWFsIAphd2FyZHMg
d2lsbCBiZSBncmFudGVkIHRvIHRoZSBiZXN0IHN0dWRlbnQgcGFwZXJzLiBSZWd1bGFyIG9yIFBo
RCBzdHVkZW50cyAKKG9uIHRoZSBkYXRlIG9mIHBhcGVyIHN1Ym1pc3Npb24pIGFyZSBlbGlnaWJs
ZS4KCkluIDIwMDUgdGhlIEp1cnksIGNvbXBvc2VkIG9mIHRoZSBQcm9ncmFtIENvbW1pdHRlZSBt
ZW1iZXJzIHByZXNlbnQgYXQgdGhlIApjb25mZXJlbmNlLCBhd2FyZGVkIHRoaXMgZGlzdGluY3Rp
b24gdG86CiAgIC0gUm9ubnkgTWVseiAoVW5pdmVyc2l0eSBvZiBMZWlwemlnKSwKICAgLSBIYXJ0
d2lnIEhvbHphcGZlbCAoVW5pdmVyc2l0eSBvZiBLYXJsc3J1aGUpLAogICAtIE1hcmNpbiBXb2xp
xYRza2kgKElQSSBQQU4sIFdhcnNhdykuICAKCkluIDIwMDcgdGhpcyBkaXN0aW5jdGlvbiB3ZW50
IHRvIERhcmlhIEZpxaFlciAoVW5pdmVyc2l0eSBvZiBManVibGphbmEpCgpPdGhlciBhd2FyZHMg
d2lsbCBiZSBhbm5vdW5jZWQuCgoKTFJMIFdPUktTSE9QOiBHZXR0aW5nIExlc3MtUmVzb3VyY2Vk
IExhbmd1YWdlcyBvbi1Cb2FyZCEKCk5hbWU6IEdldHRpbmcgTGVzcy1SZXNvdXJjZWQgTGFuZ3Vh
Z2VzIG9uLUJvYXJkIQoKRGF0ZTogNS4xMS4yMDA5LCBoYWxmLWRheSAoMTNoMzAg4oCTIDE4aDAw
KSArIGNvY2t0YWlsCgpUaGVtZToKTGFuZ3VhZ2UgVGVjaG5vbG9naWVzIChMVCkgcHJvdmlkZSBh
biBlc3NlbnRpYWwgc3VwcG9ydCB0byB0aGUgY2hhbGxlbmdlIG9mIApNdWx0aWxpbmd1YWxpc20u
IEluIG9yZGVyIHRvIGRldmVsb3AgdGhlbSwgaXQgaXMgbmVjZXNzYXJ5IHRvIGhhdmUgYWNjZXNz
IHRvIApMYW5ndWFnZSBSZXNvdXJjZXMgKExSKSBhbmQgdG8gYXNzZXNzIExUIHBlcmZvcm1hbmNl
cy4gVG8gdGhpcyByZWdhcmQsIHRoZSAKc2l0dWF0aW9uIGlzIHZlcnkgZGlmZmVyZW50IGFjcm9z
cyB0aGUgZGlmZmVyZW50IGxhbmd1YWdlcy4gTGl0dGxlIG9yIHNwYXJzZSAKZGF0YSBleGlzdCBm
b3IgbGFuZ3VhZ2VzIGluIGNvdW50cmllcyBvciByZWdpb25zIHdoZXJlIGxpbWl0ZWQgZWZmb3J0
cyBoYXZlIApiZWVuIGRldm90ZWQgdG8gc3VjaCBpc3N1ZXMgaW4gdGhlIHBhc3QsIGFsc28ga25v
d24gYXMgTGVzcy1SZXNvdXJjZWQgCkxhbmd1YWdlcyAoTFJMKS4gVGhlIHdvcmtzaG9wIGFpbXMg
YXQgcmVwb3J0aW5nIHRoZSBuZWVkcywgYXQgcHJlc2VudGluZyAKYWNoaWV2ZW1lbnRzIGFuZCBh
dCBwcm9wb3Npbmcgc29sdXRpb25zIGZvciB0aGUgZnV0dXJlLCBib3RoIGluIHRlcm1zIG9mIExS
IAphbmQgb2YgTFQgZXZhbHVhdGlvbiwgZXNwZWNpYWxseSBpbiB0aGUgRXVyb3BlYW4sIEV1cm8t
TWVkaXRlcnJhbmVhbiBhbmQgCnJlZ2lvbmFsIGZyYW1ld29ya3MuIFRoaXMgd2lsbCBhbGxvdyB0
byBpZGVudGl0eSB0aGUgZmFjdG9ycyB0aGF0IGhhdmUgYW4gCmltcGFjdCBvbiBhIHBvdGVudGlh
bCBhbmQgc2hhcmVkIHJvYWRtYXAgdG93YXJkcyBzdXBwbHlpbmcgTFIgYW5kIExUIGZvciBhbGwg
Cmxhbmd1YWdlcy4KClRvcGljczoKLSAgICAgICBFeHBlcmllbmNlIGluIHRoZSBwcm9kdWN0aW9u
LCB2YWxpZGF0aW9uIGFuZCBkaXN0cmlidXRpb24gb2YgTFIgZm9yIApsZXNzLXJlc291cmNlZCBs
YW5ndWFnZXMKLSAgICAgICBFeHBlcmllbmNlIGluIHRoZSBldmFsdWF0aW9uIG9mIExUIGZvciBs
ZXNzLXJlc291cmNlZCBsYW5ndWFnZXMKLSAgICAgICBJbmZyYXN0cnVjdHVyZXMgZm9yIG1ha2lu
ZyBhdmFpbGFibGUgTFIgYW5kIExUIGluIGxlc3MtcmVzb3VyY2VkIApsYW5ndWFnZXMKLSAgICAg
ICBBbHRlcm5hdGl2ZSBhcHByb2FjaGVzIChjb21wYXJhYmxlIGNvcnBvcmEsIHBpdm90IGxhbmd1
YWdlcywgbGFuZ3VhZ2UgCmNsdXN0ZXJpbmfigKYpCi0gICAgICAgVG8gYmUgY29tcGxldGVk4oCm
CgpDby1DaGFpcnM6IEpvc2VwaCBNYXJpYW5pIChMSU1TSS1DTlJTICYgSU1NSS1DTlJTKSwgS2hh
bGlkIENob3VrcmkoRUxSQSAmIApFTERBKSwgWnlnbXVudCBWZXR1bGFuaSAoQWRhbSBNaWNraWV3
aWN6IFVuaXZlcnNpdHksIFBvem5hbikKCkxSTCBXb3Jrc2hvcCBQcm9ncmFtIENvbW1pdHRlZToK
Ck51cmlhIEJlbCAoVW5pdi4gUG9tcGV1IEZhYnJhLCBTcGFpbikKR2VyaGFyZCBCdWRpbiAoVW5p
di4gV2llbm5hLCBBdXN0cmlhKQpOaWNvbGV0dGEgQ2Fsem9sYXJpIChJTFMsIEl0YWx5KQpEYWZm
eWQgR2liYm9uIChVbml2LiBCaWVsZWZlbGQsIEdlcm1hbnkpCk1hcmtvIEdyb2JlbG5payAoSi4g
U3RlZmFuIEluc3RpdHV0ZSwgU2xvdmVuaWEpCkphbiBIYWppYyAoQ2hhcmxlcyBVbml2LiwgQ3pl
Y2ggUmVwdWJsaWMpCkFsZmVkIE1hamV3aWN6IChVQU0sIFBvbGFuZCkKQXN1bmNpw7NuIE1vcmVu
byAoVVBDLCBTcGFpbikKSmFuIE9kaWprIChVbml2LiBVdHJlY2h0LCBUaGUgTmVlZGVybGFuZHMp
Ck5pY2hvbGFzIE9zdGxlciAoRm91bmRhdGlvbiBmb3IgRW5kZW5nZXJlZCBMYW5ndWFnZXMsIFVL
KQpTdGVsbGlvcyBQaXBlcmlkaXMoSUxTUCwgR3JlZWNlKQpHYWJvciBQcm9zemVreSAoTW9ycGhv
bG9naWMsIEh1bmdhcnkpCk1vaHNlbiBSYXNod2FuIChDYWlybyBVbml2LiwgRWd5cHQpCktlcGEg
U2FyYXNvbGEgR2FiaW9sYSAoVW5pdi4gZGVsIFBhcyBWYXNjbywgU3BhaW4pCk1hcmtvIFRhZGnE
hyAoQ3JvYXRpYW4gQWNhZGVteSBvZiBTY2llbmNlcyBhbmQgQXJ0cywgQ3JvYXRpYSkKQ3Jpc3Rp
bmEgVmVydGFuIChVbml2LiBIYW1idXJnLCBHZXJtYW55KQpCcmlvbnkgV2lsbGlhbXMgKFVuaXYu
IEVkaW5idXJnaCwgVUspCgpQYXBlciBzdWJtaXNzaW9uIGRlYWRsaW5lOiBBdWd1c3QgMTUuCgpT
cG9uc29yczogRkxhUmVOZXQsIEVMUkEKCkluc2NyaXB0aW9uczogYXMgZm9yIHRoZSBnZW5lcmFs
IExUQyAoKyBjYyB0byB3b3Jrc2hvcCBjaGFpcnMpIAoKRmVlczogaW5zY3JpcHRpb24gZmVlcyB0
byB0aGUgTFRDICsgZXh0cmEgNDAgRXVyb3Mgb3IgODAgRXVyb3MgZm9yIHRoZSAKV29ya3Nob3At
b25seSBhdHRlbmRlcnMuIAoKUGFwZXIgc3VibWlzc2lvbjogYXMgZm9yIHRoZSBnZW5lcmFsIExU
QyhFYXN5Q2hhaXIpICsgdG8gdGhlIHdvcmtzaG9wIGNoYWlycyAKClByZXNlbnRhdGlvbjogcHVi
bGljYXRpb24gaW4gdGhlIExUQyBwcm9jZWVkaW5ncyAocGFwZXIgKyBDRCkgCgpSZXZpZXdpbmc6
IHVwIHRvIHRoZSB3b3Jrc2hvcCBjaGFpcnMgKyBzY2llbnRpZmljIGNvbW1pdHRlZQoKUHJvZ3Jh
bTogVGhlIHdvcmtzaG9wIHdpbGwgY29tcHJpc2UgcHJlc2VudGF0aW9ucyAoaW5jbHVkaW5nIGtl
eW5vdGUgdGFsa3MpIAphbmQgYSBwYW5lbCBzZXNzaW9uLCBpbmNsdWRpbmcgYSBFQyByZXByZXNl
bnRhdGl2ZSAodGVudGF0aXZlKS4gSW4gYWRkaXRpb24sIApzZWxlY3RlZCBzcGVha2VycyB3aWxs
IGJlIGludml0ZWQgdG8gCnByZXNlbnQgdGhlaXIgcGFwZXJzIHRvIGEgbGFyZ2VyIGF1ZGllbmNl
IGF0IHRoZSBtYWluIExUQyBjb25mZXJlbmNlLgoKCgpFLW1haWw6IGx0Y0BhbXUuZWR1LnBsCgpX
V1c6IGh0dHA6Ly93d3cubHRjLmFtdS5lZHUucGwvCgpfX19fX19fX19fX19fX19fX19fX19fX19f
X19fX19fX19fX19fX19fX19fX19fXwpDb3Jwb3JhIG1haWxpbmcgbGlzdApDb3Jwb3JhQHVpYi5u
bwpodHRwOi8vbWFpbG1hbi51aWIubm8vbGlzdGluZm8vY29ycG9yYQo=
