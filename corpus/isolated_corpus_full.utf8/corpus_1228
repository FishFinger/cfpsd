From - Thu Dec 10 14:26:12 2009
X-Mozilla-Status: 0001
X-Mozilla-Status2: 00000000
Delivered-To: jpprost@gmail.com
Received: by 10.114.58.8 with SMTP id g8cs1495530waa;
        Thu, 8 Mar 2007 16:38:08 -0800 (PST)
Received: by 10.35.9.15 with SMTP id m15mr2172362pyi.1173400687969;
        Thu, 08 Mar 2007 16:38:07 -0800 (PST)
Return-Path: <rasmusse@ptd.net>
Received: from vacuum.ics.mq.edu.au (vacuum.ics.mq.edu.au [137.111.216.16])
        by mx.google.com with ESMTP id 12si10615948nzn.2007.03.08.16.38.06;
        Thu, 08 Mar 2007 16:38:07 -0800 (PST)
Received-SPF: fail (google.com: domain of rasmusse@ptd.net does not designate 137.111.216.16 as permitted sender)
Received: from vesuvius.ics.mq.edu.au (vesuvius.ics.mq.edu.au [137.111.240.11])
	by vacuum.ics.mq.edu.au (8.13.8+Sun/8.13.8) with ESMTP id l290c5mu021478
	for <jpprost@gmail.com>; Fri, 9 Mar 2007 11:38:05 +1100 (EST)
Received: from barra2.its.mq.edu.au (barra2.its.mq.edu.au [137.111.1.22])
	by vesuvius.ics.mq.edu.au (8.13.5/8.13.8) with ESMTP id l290c25Q006133
	for <jpprost@mailbox.ics.mq.edu.au>; Fri, 9 Mar 2007 11:38:02 +1100 (EST)
X-ASG-Debug-ID: 1173396024-1a8700030000-RCdhz5
X-Barracuda-URL: http://barra.its.mq.edu.au:8000/cgi-bin/mark.cgi
X-Barracuda-Connect: vacuum.ics.mq.edu.au[137.111.216.16]
X-Barracuda-Start-Time: 1173396024
Received: from vacuum.ics.mq.edu.au (vacuum.ics.mq.edu.au [137.111.216.16])
	by barra2.its.mq.edu.au (Spam Firewall) with ESMTP id 4B0DF71A87E
	for <jpprost@mailbox.ics.mq.edu.au>; Fri,  9 Mar 2007 10:20:24 +1100 (EST)
Received: from sunb.ocs.mq.edu.au (sunb.ocs.mq.edu.au [137.111.1.11])
	by vacuum.ics.mq.edu.au (8.13.8+Sun/8.13.8) with ESMTP id l28NKNjN018173
	for <jpprost@ics.mq.edu.au>; Fri, 9 Mar 2007 10:20:23 +1100 (EST)
Received: from pm10.mailnet.ptd.net (pm10.mailnet.ptd.net [204.186.29.232])
	by sunb.ocs.mq.edu.au (8.10.2/8.10.2) with ESMTP id l28NKKW16496
	for <jpprost@ics.mq.edu.au>; Fri, 9 Mar 2007 10:20:20 +1100 (EST)
Received: (qmail 14729 invoked by uid 50005); 8 Mar 2007 23:20:15 -0000
Received: from 70.44.168.36 by pm10.mailnet.ptd.net (envelope-from <rasmusse@ptd.net>, uid 50002) with qmail-scanner-2.01 
 (clamdscan: 0.88.6/2730.  
 Clear:RC:0(70.44.168.36):. 
 Processed in 0.104962 secs); 08 Mar 2007 23:20:15 -0000
Received: from unknown (HELO ARCSOffice) (authenticated:rasmusse@[70.44.168.36])
          (envelope-sender <rasmusse@ptd.net>)
          by pm10.mailnet.ptd.net (qmail-ldap-1.03) with SMTP
          for <rasmusse@ptd.net>; 8 Mar 2007 23:20:14 -0000
Message-ID: <002b01c761d8$52715de0$24a82c46@ARCSOffice>
Reply-To: "Priscilla Rasmussen" <rasmusse@ptd.net>
From: "Priscilla Rasmussen" <rasmusse@ptd.net>
To: <rasmusse@ptd.net>
X-ASG-Orig-Subj: Germany:  Finite-State Methods and Natural Language Processing - FSMNLP 2007  --  CFP
Subject: Germany:  Finite-State Methods and Natural Language Processing - FSMNLP 2007  --  CFP
Date: Thu, 8 Mar 2007 18:20:06 -0500
Organization: ACL/AMTA/ARCS/dg.o
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_0028_01C761AE.65E66430"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2900.3028
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.3028
X-Barracuda-Virus-Scanned: by Barracuda Spam Firewall at its.mq.edu.au
X-Barracuda-Spam-Score: 0.00
X-Barracuda-Spam-Status: No, SCORE=0.00 using per-user scores of TAG_LEVEL=3.0 QUARANTINE_LEVEL=3.5 KILL_LEVEL=1000.0 tests=HTML_MESSAGE
X-Barracuda-Spam-Report: Code version 3.1, rules version 3.1.10717
	Rule breakdown below
	 pts rule name              description
	---- ---------------------- --------------------------------------------------
	0.00 HTML_MESSAGE           BODY: HTML included in message

This is a multi-part message in MIME format.

------=_NextPart_000_0028_01C761AE.65E66430
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Finite-State Methods and Natural Language Processing - FSMNLP 2007

Sixth International Workshop
University of Potsdam, Germany
14 - 16 September 2007
http://www.ling.uni-potsdam.de/fsmnlp2007
mailto://fsmnlp2007@ling.uni-potsdam.de

Papers due: 3 June 2007
The aim of the FSMNLP 2007 is to bring together members of the academic, =
research, and industrial community working on finite-state based models =
in language technology, computational linguistics, linguistics and =
cognitive science or on related theory or methods in fields such as =
computer science and mathematics. The workshop will be a forum for =
researchers working

    * on NLP applications,
    * on the theoretical and implementation aspects, or
    * on their combination.=20

We invite novel high-quality papers that are related to the themes =
including but not limited to:

1. NLP applications and linguistic aspects of finite-state methods

The topic includes but is not restricted to:

    * speech, sign language, phonology, hyphenation, prosody
    * scripts, text normalization, segmentation, tokenization, indexing
    * morphology, stemming, lemmatisation, information retrieval, =
spelling correction
    * syntax, POS tagging, partial parsing, disambiguation, information =
extraction
    * machine translation, translation memories, glossing, dialect =
adaptation
    * annotated corpora and treebanks, semi-automatic annotation, error =
mining, searching=20

2. Finite-state models of language

With this more focused topic (inside 1) we invite papers on aspects that =
motivate sufficiency of finite-state methods or their subsets for =
capturing various requirements of natural language processing. The topic =
includes but is not restricted to:

    * performance, linguistic applicability, finite-state hypotheses
    * Zipf's law and coverage, model checking against finite corpora
    * regular approximations under parameterized complexity, limitations =
and definitions of relevant complexities such as ambiguity, recursion, =
crossings, rule applications, constraint violations, reduplication, =
exponents, discontinuity, path-width, and induction depth
    * similarity inferences, dissimilation, segmental length, =
counter-freeness, asynchronous machines
    * garden-path sentences, deterministic parsing, expected parses, =
Markov chains
    * incremental parsing, uncertainty, reliability/variance in =
stochastic parsing, linear sequential machines=20

3. Practices for building lexical transducers for the world's languages.

The topic accounts for usability of finite-state methods in NLP. It =
includes but is not restricted to:

    * required user training and consultation, learning curve of =
non-specialists
    * questionnaires, discovery methods, adaptive computer-aided =
glossing and interlinearization
    * example-based grammars, semi-automatic learning, user-driven =
learning (see topic 6 too)
    * low literacy level and restricted availability of training data, =
writing systems/phonology under development, new non-Roman scripts, =
endangered languages
    * linguist's workbenches, stealth-to-wealth parser development
    * experiences of using existing tools (e.g. TWOL) for computational =
morphology and phonology=20

4. Specification and implementation of sets, relations and =
multiplicities in NLP using finite automata

The topic includes but is not restricted to:

    * regular rule formalisms, grammar systems, expressions, operations, =
closure properties, complexities
    * algorithms for compilation, approximation, manipulation, =
optimization, and lazy evaluation of finite machines
    * finite string and tree automata, transducers, morphisms and =
bimorphisms
    * weights, registers, multiple tapes, alphabets, state covers and =
partitions, representations
    * locality, constraint propagation, star-free languages, data vs. =
query complexity
    * logical specification, MSO(SLR,matches), FO(Str,<), LTL, =
generalized restriction, local grammars=20

5. Constraint-based grammars and k-ary regular relations

With this more focused topic (inside 4) we invite researchers from =
related fields (computational linguists, mathematicians and computer =
scientists) into discussion that is motivated by constraint-based, =
declarative approaches to morphology/phonology and computational =
problems related to them. For example, regular relations in general are =
not closed under intersection, but restricted use of intersection of =
relations have proven useful in computational phonology and morphology, =
and their implementations such as KIMMO, PC-KIMMO, TWOLC, SEMHE, AMAR, =
WFSC, etc. In the future, new useful approaches and implementations may =
come up. The approaches may also propagate to other application areas in =
natural language processing, including finite-state syntax and query =
languages for parallel annotations in linguistic corpora. The topic =
includes but is not restricted to:

    * multi-tape automata, same-length relations and partition-based =
morphology, Semitic morphology
    * autosegmental phonology, shuffle, trajectories, synchronization, =
segmental anchoring, alignment constraints, syllable structure, =
partial-order reductions
    * problems related to auto-intersection of multi-tape automata e.g. =
marked Post Correspondence Problem
    * varieties of regular languages and relations, descriptive =
complexity of finite-state based grammars
    * automaton-based approaches to declarative constraint grammars, =
constraints in optimality theory
    * parallel corpus annotations, register automata, acyclic timed =
automata=20

6. Machine learning of finite-state models of natural language

This topic includes but is not restricted to:

    * learning regular rule systems, learning topologies of finite =
automata and transducers
    * parameter estimation and smoothing, lexical openness
    * computer-driven grammar writing, user-driven grammar learning, =
discovery procedures
    * data scarcity, realistic variations of Gold's model, learnability =
and cognitive science
    * incompletely specified finite-state networks
    * model-theoretic grammars, gradient well/ill-formedness=20

7. Finite-state manipulation software (with relevance to the above =
themes)

This topic includes but is not restricted to

    * regular expression pre-compilers such as regexopt, xfst2fsa, =
standards and interfaces for finite-state based software components, =
conversion tools
    * tools such as LEXC, Lextools, Intex, XFST, FSM, GRM, WFSC, FIRE =
Engine, FADD, FSA/UTR, SRILM, FIRE Station and Grail
    * free or almost free software such as MIT FST, Carmel, RWTH FSA, =
FSA Utilities, FSM<2.0>, Unitex, OpenFIRE, Vaucanson, SFST, PCKIMMO, =
MONA, Hopskip, ASTL, UCFSM, HaLeX, SML, and WFST
    * results obtainable with such exploration tools as automata, =
Autographe, Amore, and TESTAS
    * visualization tools such as Graphviz and Vaucanson-G
    * language-specific resources and descriptions, freely available =
benchmarking resources=20

The descriptions of the topics above are not meant to be complete, and =
should extend to cover all traditional FSMNLP topics. Submitted papers =
or abstracts may fall in several categories.

------=_NextPart_000_0028_01C761AE.65E66430
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2900.3059" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT face=3DTahoma size=3D2>Finite-State Methods and Natural =
Language=20
Processing - FSMNLP 2007</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>Sixth International =
Workshop<BR>University of=20
Potsdam, Germany<BR>14 - 16 September 2007<BR><A=20
href=3D"http://www.ling.uni-potsdam.de/fsmnlp2007">http://www.ling.uni-po=
tsdam.de/fsmnlp2007</A><BR><A=20
href=3D"mailto://fsmnlp2007@ling.uni-potsdam.de">mailto://fsmnlp2007@ling=
.uni-potsdam.de</A></FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>Papers due: 3 June 2007<BR>The aim of =
the FSMNLP=20
2007 is to bring together members of the academic, research, and =
industrial=20
community working on finite-state based models in language technology,=20
computational linguistics, linguistics and cognitive science or on =
related=20
theory or methods in fields such as computer science and mathematics. =
The=20
workshop will be a forum for researchers working</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * on NLP=20
applications,<BR>&nbsp;&nbsp;&nbsp; * on the theoretical and =
implementation=20
aspects, or<BR>&nbsp;&nbsp;&nbsp; * on their combination. </FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>We invite novel high-quality papers =
that are=20
related to the themes including but not limited to:</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>1. NLP applications and linguistic =
aspects of=20
finite-state methods</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>The topic includes but is not =
restricted=20
to:</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * speech, sign =
language,=20
phonology, hyphenation, prosody<BR>&nbsp;&nbsp;&nbsp; * scripts, text=20
normalization, segmentation, tokenization, =
indexing<BR>&nbsp;&nbsp;&nbsp; *=20
morphology, stemming, lemmatisation, information retrieval, spelling=20
correction<BR>&nbsp;&nbsp;&nbsp; * syntax, POS tagging, partial parsing, =

disambiguation, information extraction<BR>&nbsp;&nbsp;&nbsp; * machine=20
translation, translation memories, glossing, dialect=20
adaptation<BR>&nbsp;&nbsp;&nbsp; * annotated corpora and treebanks,=20
semi-automatic annotation, error mining, searching </FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>2. Finite-state models of =
language</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>With this more focused topic (inside =
1) we invite=20
papers on aspects that motivate sufficiency of finite-state methods or =
their=20
subsets for capturing various requirements of natural language =
processing. The=20
topic includes but is not restricted to:</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * performance, =
linguistic=20
applicability, finite-state hypotheses<BR>&nbsp;&nbsp;&nbsp; * Zipf's =
law and=20
coverage, model checking against finite corpora<BR>&nbsp;&nbsp;&nbsp; * =
regular=20
approximations under parameterized complexity, limitations and =
definitions of=20
relevant complexities such as ambiguity, recursion, crossings, rule=20
applications, constraint violations, reduplication, exponents, =
discontinuity,=20
path-width, and induction depth<BR>&nbsp;&nbsp;&nbsp; * similarity =
inferences,=20
dissimilation, segmental length, counter-freeness, asynchronous=20
machines<BR>&nbsp;&nbsp;&nbsp; * garden-path sentences, deterministic =
parsing,=20
expected parses, Markov chains<BR>&nbsp;&nbsp;&nbsp; * incremental =
parsing,=20
uncertainty, reliability/variance in stochastic parsing, linear =
sequential=20
machines </FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>3. Practices for building lexical =
transducers for=20
the world's languages.</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>The topic accounts for usability of =
finite-state=20
methods in NLP. It includes but is not restricted to:</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * required user =
training and=20
consultation, learning curve of non-specialists<BR>&nbsp;&nbsp;&nbsp; *=20
questionnaires, discovery methods, adaptive computer-aided glossing and=20
interlinearization<BR>&nbsp;&nbsp;&nbsp; * example-based grammars,=20
semi-automatic learning, user-driven learning (see topic 6=20
too)<BR>&nbsp;&nbsp;&nbsp; * low literacy level and restricted =
availability of=20
training data, writing systems/phonology under development, new =
non-Roman=20
scripts, endangered languages<BR>&nbsp;&nbsp;&nbsp; * linguist's =
workbenches,=20
stealth-to-wealth parser development<BR>&nbsp;&nbsp;&nbsp; * experiences =
of=20
using existing tools (e.g. TWOL) for computational morphology and =
phonology=20
</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>4. Specification and implementation of =
sets,=20
relations and multiplicities in NLP using finite automata</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>The topic includes but is not =
restricted=20
to:</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * regular rule =
formalisms,=20
grammar systems, expressions, operations, closure properties,=20
complexities<BR>&nbsp;&nbsp;&nbsp; * algorithms for compilation, =
approximation,=20
manipulation, optimization, and lazy evaluation of finite=20
machines<BR>&nbsp;&nbsp;&nbsp; * finite string and tree automata, =
transducers,=20
morphisms and bimorphisms<BR>&nbsp;&nbsp;&nbsp; * weights, registers, =
multiple=20
tapes, alphabets, state covers and partitions,=20
representations<BR>&nbsp;&nbsp;&nbsp; * locality, constraint =
propagation,=20
star-free languages, data vs. query complexity<BR>&nbsp;&nbsp;&nbsp; * =
logical=20
specification, MSO(SLR,matches), FO(Str,&lt;), LTL, generalized =
restriction,=20
local grammars </FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>5. Constraint-based grammars and k-ary =
regular=20
relations</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>With this more focused topic (inside =
4) we invite=20
researchers from related fields (computational linguists, mathematicians =
and=20
computer scientists) into discussion that is motivated by =
constraint-based,=20
declarative approaches to morphology/phonology and computational =
problems=20
related to them. For example, regular relations in general are not =
closed under=20
intersection, but restricted use of intersection of relations have =
proven useful=20
in computational phonology and morphology, and their implementations =
such as=20
KIMMO, PC-KIMMO, TWOLC, SEMHE, AMAR, WFSC, etc. In the future, new =
useful=20
approaches and implementations may come up. The approaches may also =
propagate to=20
other application areas in natural language processing, including =
finite-state=20
syntax and query languages for parallel annotations in linguistic =
corpora. The=20
topic includes but is not restricted to:</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * multi-tape =
automata,=20
same-length relations and partition-based morphology, Semitic=20
morphology<BR>&nbsp;&nbsp;&nbsp; * autosegmental phonology, shuffle,=20
trajectories, synchronization, segmental anchoring, alignment =
constraints,=20
syllable structure, partial-order reductions<BR>&nbsp;&nbsp;&nbsp; * =
problems=20
related to auto-intersection of multi-tape automata e.g. marked Post=20
Correspondence Problem<BR>&nbsp;&nbsp;&nbsp; * varieties of regular =
languages=20
and relations, descriptive complexity of finite-state based=20
grammars<BR>&nbsp;&nbsp;&nbsp; * automaton-based approaches to =
declarative=20
constraint grammars, constraints in optimality =
theory<BR>&nbsp;&nbsp;&nbsp; *=20
parallel corpus annotations, register automata, acyclic timed automata=20
</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>6. Machine learning of finite-state =
models of=20
natural language</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>This topic includes but is not =
restricted=20
to:</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * learning regular =
rule=20
systems, learning topologies of finite automata and=20
transducers<BR>&nbsp;&nbsp;&nbsp; * parameter estimation and smoothing, =
lexical=20
openness<BR>&nbsp;&nbsp;&nbsp; * computer-driven grammar writing, =
user-driven=20
grammar learning, discovery procedures<BR>&nbsp;&nbsp;&nbsp; * data =
scarcity,=20
realistic variations of Gold's model, learnability and cognitive=20
science<BR>&nbsp;&nbsp;&nbsp; * incompletely specified finite-state=20
networks<BR>&nbsp;&nbsp;&nbsp; * model-theoretic grammars, gradient=20
well/ill-formedness </FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>7. Finite-state manipulation software =
(with=20
relevance to the above themes)</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>This topic includes but is not =
restricted=20
to</FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>&nbsp;&nbsp;&nbsp; * regular =
expression=20
pre-compilers such as regexopt, xfst2fsa, standards and interfaces for=20
finite-state based software components, conversion =
tools<BR>&nbsp;&nbsp;&nbsp; *=20
tools such as LEXC, Lextools, Intex, XFST, FSM, GRM, WFSC, FIRE Engine, =
FADD,=20
FSA/UTR, SRILM, FIRE Station and Grail<BR>&nbsp;&nbsp;&nbsp; * free or =
almost=20
free software such as MIT FST, Carmel, RWTH FSA, FSA Utilities, =
FSM&lt;2.0&gt;,=20
Unitex, OpenFIRE, Vaucanson, SFST, PCKIMMO, MONA, Hopskip, ASTL, UCFSM, =
HaLeX,=20
SML, and WFST<BR>&nbsp;&nbsp;&nbsp; * results obtainable with such =
exploration=20
tools as automata, Autographe, Amore, and TESTAS<BR>&nbsp;&nbsp;&nbsp; * =

visualization tools such as Graphviz and =
Vaucanson-G<BR>&nbsp;&nbsp;&nbsp; *=20
language-specific resources and descriptions, freely available =
benchmarking=20
resources </FONT></DIV>
<DIV>&nbsp;</DIV>
<DIV><FONT face=3DTahoma size=3D2>The descriptions of the topics above =
are not meant=20
to be complete, and should extend to cover all traditional FSMNLP =
topics.=20
Submitted papers or abstracts may fall in several=20
categories.<BR></FONT></DIV></BODY></HTML>

------=_NextPart_000_0028_01C761AE.65E66430--

